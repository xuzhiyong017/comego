// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class KeyExchangeRes extends Message {

  public static final Integer DEFAULT_RANDOM = 0;
  public static final String DEFAULT_KEY = "";
  public static final EncryptType DEFAULT_ENCTYPE = EncryptType.EncryptTypeNone;
  public static final Boolean DEFAULT_GZIP = false;

  @ProtoField(tag = 1, type = INT32, label = REQUIRED)
  public final Integer random;

  @ProtoField(tag = 2, type = STRING, label = REQUIRED)
  public final String key;

  @ProtoField(tag = 3, type = ENUM, label = REQUIRED)
  public final EncryptType enctype;

  @ProtoField(tag = 4, type = BOOL)
  public final Boolean gzip;

  private KeyExchangeRes(Builder builder) {
    this.random = builder.random;
    this.key = builder.key;
    this.enctype = builder.enctype;
    this.gzip = builder.gzip;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof KeyExchangeRes)) return false;
    KeyExchangeRes o = (KeyExchangeRes) other;
    return equals(random, o.random)
        && equals(key, o.key)
        && equals(enctype, o.enctype)
        && equals(gzip, o.gzip);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = random != null ? random.hashCode() : 0;
      result = result * 37 + (key != null ? key.hashCode() : 0);
      result = result * 37 + (enctype != null ? enctype.hashCode() : 0);
      result = result * 37 + (gzip != null ? gzip.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<KeyExchangeRes> {

    public Integer random;
    public String key;
    public EncryptType enctype;
    public Boolean gzip;

    public Builder() {
    }

    public Builder(KeyExchangeRes message) {
      super(message);
      if (message == null) return;
      this.random = message.random;
      this.key = message.key;
      this.enctype = message.enctype;
      this.gzip = message.gzip;
    }

    public Builder random(Integer random) {
      this.random = random;
      return this;
    }

    public Builder key(String key) {
      this.key = key;
      return this;
    }

    public Builder enctype(EncryptType enctype) {
      this.enctype = enctype;
      return this;
    }

    public Builder gzip(Boolean gzip) {
      this.gzip = gzip;
      return this;
    }

    @Override
    public KeyExchangeRes build() {
      checkRequiredFields();
      return new KeyExchangeRes(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
