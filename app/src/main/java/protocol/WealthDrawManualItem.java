// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.FLOAT;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Datatype.UINT64;

public final class WealthDrawManualItem extends Message {

  public static final Long DEFAULT_ID = 0L;
  public static final Long DEFAULT_UID = 0L;
  public static final Float DEFAULT_MONEY = 0F;
  public static final DrawMode DEFAULT_DRAWMODE = DrawMode.DrawMode_Normal;
  public static final String DEFAULT_CREATETIME = "";
  public static final String DEFAULT_NICK = "";
  public static final Integer DEFAULT_STATE = 0;

  @ProtoField(tag = 1, type = UINT64)
  public final Long id;

  @ProtoField(tag = 2, type = UINT64)
  public final Long uid;

  @ProtoField(tag = 3, type = FLOAT)
  public final Float money;

  @ProtoField(tag = 4, type = ENUM)
  public final DrawMode drawMode;

  @ProtoField(tag = 5, type = STRING)
  public final String createTime;

  @ProtoField(tag = 6, type = STRING)
  public final String nick;

  @ProtoField(tag = 7, type = UINT32)
  public final Integer state;

  private WealthDrawManualItem(Builder builder) {
    this.id = builder.id;
    this.uid = builder.uid;
    this.money = builder.money;
    this.drawMode = builder.drawMode;
    this.createTime = builder.createTime;
    this.nick = builder.nick;
    this.state = builder.state;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof WealthDrawManualItem)) return false;
    WealthDrawManualItem o = (WealthDrawManualItem) other;
    return equals(id, o.id)
        && equals(uid, o.uid)
        && equals(money, o.money)
        && equals(drawMode, o.drawMode)
        && equals(createTime, o.createTime)
        && equals(nick, o.nick)
        && equals(state, o.state);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = id != null ? id.hashCode() : 0;
      result = result * 37 + (uid != null ? uid.hashCode() : 0);
      result = result * 37 + (money != null ? money.hashCode() : 0);
      result = result * 37 + (drawMode != null ? drawMode.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (nick != null ? nick.hashCode() : 0);
      result = result * 37 + (state != null ? state.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<WealthDrawManualItem> {

    public Long id;
    public Long uid;
    public Float money;
    public DrawMode drawMode;
    public String createTime;
    public String nick;
    public Integer state;

    public Builder() {
    }

    public Builder(WealthDrawManualItem message) {
      super(message);
      if (message == null) return;
      this.id = message.id;
      this.uid = message.uid;
      this.money = message.money;
      this.drawMode = message.drawMode;
      this.createTime = message.createTime;
      this.nick = message.nick;
      this.state = message.state;
    }

    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    public Builder uid(Long uid) {
      this.uid = uid;
      return this;
    }

    public Builder money(Float money) {
      this.money = money;
      return this;
    }

    public Builder drawMode(DrawMode drawMode) {
      this.drawMode = drawMode;
      return this;
    }

    public Builder createTime(String createTime) {
      this.createTime = createTime;
      return this;
    }

    public Builder nick(String nick) {
      this.nick = nick;
      return this;
    }

    public Builder state(Integer state) {
      this.state = state;
      return this;
    }

    @Override
    public WealthDrawManualItem build() {
      return new WealthDrawManualItem(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
