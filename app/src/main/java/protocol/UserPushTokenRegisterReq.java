// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoEnum;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class UserPushTokenRegisterReq extends Message {

  public static final String DEFAULT_DEVICEID = "";
  public static final String DEFAULT_TOKEN = "";
  public static final DeviceType DEFAULT_TYPE = DeviceType.Android;

  @ProtoField(tag = 1, type = STRING, label = REQUIRED)
  public final String deviceId;

  @ProtoField(tag = 2, type = STRING, label = REQUIRED)
  public final String token;

  @ProtoField(tag = 3, type = ENUM)
  public final DeviceType type;

  private UserPushTokenRegisterReq(Builder builder) {
    this.deviceId = builder.deviceId;
    this.token = builder.token;
    this.type = builder.type;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UserPushTokenRegisterReq)) return false;
    UserPushTokenRegisterReq o = (UserPushTokenRegisterReq) other;
    return equals(deviceId, o.deviceId)
        && equals(token, o.token)
        && equals(type, o.type);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = deviceId != null ? deviceId.hashCode() : 0;
      result = result * 37 + (token != null ? token.hashCode() : 0);
      result = result * 37 + (type != null ? type.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<UserPushTokenRegisterReq> {

    public String deviceId;
    public String token;
    public DeviceType type;

    public Builder() {
    }

    public Builder(UserPushTokenRegisterReq message) {
      super(message);
      if (message == null) return;
      this.deviceId = message.deviceId;
      this.token = message.token;
      this.type = message.type;
    }

    public Builder deviceId(String deviceId) {
      this.deviceId = deviceId;
      return this;
    }

    public Builder token(String token) {
      this.token = token;
      return this;
    }

    public Builder type(DeviceType type) {
      this.type = type;
      return this;
    }

    @Override
    public UserPushTokenRegisterReq build() {
      checkRequiredFields();
      return new UserPushTokenRegisterReq(this);
    }
  }

  public enum DeviceType
      implements ProtoEnum {
    Android(1),
    Ios(2);

    private final int value;

    private DeviceType(int value) {
      this.value = value;
    }

    @Override
    public int getValue() {
      return value;
    }

    public static final int Android_VALUE = 1;
    public static final int Ios_VALUE = 2;

    public static DeviceType valueOf(int value) {
      switch (value)  {
        case 1: return Android;
        case 2: return Ios;
        default: return null;
      }
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
