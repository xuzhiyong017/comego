// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Datatype.UINT64;

public final class GroupInfo extends Message {

  public static final Long DEFAULT_GID = 0L;
  public static final Long DEFAULT_DGID = 0L;
  public static final Long DEFAULT_PARENTGID = 0L;
  public static final String DEFAULT_NAME = "";
  public static final String DEFAULT_INTRO = "";
  public static final String DEFAULT_LOGOURL = "";
  public static final GroupType DEFAULT_GTYPE = GroupType.Group_Unknown;
  public static final Long DEFAULT_OWNERID = 0L;
  public static final GroupApprove DEFAULT_APPROVE = GroupApprove.Needless;
  public static final GroupState DEFAULT_STATE = GroupState.GroupState_Unknown;
  public static final String DEFAULT_PASSWORD = "";
  public static final Integer DEFAULT_MEMBERS = 0;
  public static final Integer DEFAULT_LIVE = 0;
  public static final Long DEFAULT_CREATETIME = 0L;
  public static final String DEFAULT_GAMEICONURL = "";
  public static final String DEFAULT_CODE = "";

  @ProtoField(tag = 1, type = UINT64)
  public final Long gid;

  @ProtoField(tag = 2, type = UINT64)
  public final Long dGid;

  @ProtoField(tag = 3, type = UINT64)
  public final Long parentGid;

  @ProtoField(tag = 4, type = STRING)
  public final String name;

  @ProtoField(tag = 5, type = STRING)
  public final String intro;

  @ProtoField(tag = 6, type = STRING)
  public final String logoUrl;

  @ProtoField(tag = 7, type = ENUM)
  public final GroupType gtype;

  @ProtoField(tag = 8, type = UINT64)
  public final Long ownerId;

  @ProtoField(tag = 9)
  public final UserInfo ownerInfo;

  /**
   * 创建者的基本信息
   */
  @ProtoField(tag = 10, type = ENUM)
  public final GroupApprove approve;

  @ProtoField(tag = 11, type = ENUM)
  public final GroupState state;

  @ProtoField(tag = 12, type = STRING)
  public final String password;

  @ProtoField(tag = 13, type = UINT32)
  public final Integer members;

  @ProtoField(tag = 21, type = UINT32)
  public final Integer live;

  /**
   * 0无直播，1视频+音频，2仅音频
   */
  @ProtoField(tag = 30, type = INT64)
  public final Long createTime;

  @ProtoField(tag = 40)
  public final TexasRoom texasInfo;

  @ProtoField(tag = 41, type = STRING)
  public final String gameIconUrl;

  @ProtoField(tag = 100, type = STRING)
  public final String code;

  private GroupInfo(Builder builder) {
    this.gid = builder.gid;
    this.dGid = builder.dGid;
    this.parentGid = builder.parentGid;
    this.name = builder.name;
    this.intro = builder.intro;
    this.logoUrl = builder.logoUrl;
    this.gtype = builder.gtype;
    this.ownerId = builder.ownerId;
    this.ownerInfo = builder.ownerInfo;
    this.approve = builder.approve;
    this.state = builder.state;
    this.password = builder.password;
    this.members = builder.members;
    this.live = builder.live;
    this.createTime = builder.createTime;
    this.texasInfo = builder.texasInfo;
    this.gameIconUrl = builder.gameIconUrl;
    this.code = builder.code;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GroupInfo)) return false;
    GroupInfo o = (GroupInfo) other;
    return equals(gid, o.gid)
        && equals(dGid, o.dGid)
        && equals(parentGid, o.parentGid)
        && equals(name, o.name)
        && equals(intro, o.intro)
        && equals(logoUrl, o.logoUrl)
        && equals(gtype, o.gtype)
        && equals(ownerId, o.ownerId)
        && equals(ownerInfo, o.ownerInfo)
        && equals(approve, o.approve)
        && equals(state, o.state)
        && equals(password, o.password)
        && equals(members, o.members)
        && equals(live, o.live)
        && equals(createTime, o.createTime)
        && equals(texasInfo, o.texasInfo)
        && equals(gameIconUrl, o.gameIconUrl)
        && equals(code, o.code);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = gid != null ? gid.hashCode() : 0;
      result = result * 37 + (dGid != null ? dGid.hashCode() : 0);
      result = result * 37 + (parentGid != null ? parentGid.hashCode() : 0);
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (intro != null ? intro.hashCode() : 0);
      result = result * 37 + (logoUrl != null ? logoUrl.hashCode() : 0);
      result = result * 37 + (gtype != null ? gtype.hashCode() : 0);
      result = result * 37 + (ownerId != null ? ownerId.hashCode() : 0);
      result = result * 37 + (ownerInfo != null ? ownerInfo.hashCode() : 0);
      result = result * 37 + (approve != null ? approve.hashCode() : 0);
      result = result * 37 + (state != null ? state.hashCode() : 0);
      result = result * 37 + (password != null ? password.hashCode() : 0);
      result = result * 37 + (members != null ? members.hashCode() : 0);
      result = result * 37 + (live != null ? live.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (texasInfo != null ? texasInfo.hashCode() : 0);
      result = result * 37 + (gameIconUrl != null ? gameIconUrl.hashCode() : 0);
      result = result * 37 + (code != null ? code.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<GroupInfo> {

    public Long gid;
    public Long dGid;
    public Long parentGid;
    public String name;
    public String intro;
    public String logoUrl;
    public GroupType gtype;
    public Long ownerId;
    public UserInfo ownerInfo;
    public GroupApprove approve;
    public GroupState state;
    public String password;
    public Integer members;
    public Integer live;
    public Long createTime;
    public TexasRoom texasInfo;
    public String gameIconUrl;
    public String code;

    public Builder() {
    }

    public Builder(GroupInfo message) {
      super(message);
      if (message == null) return;
      this.gid = message.gid;
      this.dGid = message.dGid;
      this.parentGid = message.parentGid;
      this.name = message.name;
      this.intro = message.intro;
      this.logoUrl = message.logoUrl;
      this.gtype = message.gtype;
      this.ownerId = message.ownerId;
      this.ownerInfo = message.ownerInfo;
      this.approve = message.approve;
      this.state = message.state;
      this.password = message.password;
      this.members = message.members;
      this.live = message.live;
      this.createTime = message.createTime;
      this.texasInfo = message.texasInfo;
      this.gameIconUrl = message.gameIconUrl;
      this.code = message.code;
    }

    public Builder gid(Long gid) {
      this.gid = gid;
      return this;
    }

    public Builder dGid(Long dGid) {
      this.dGid = dGid;
      return this;
    }

    public Builder parentGid(Long parentGid) {
      this.parentGid = parentGid;
      return this;
    }

    public Builder name(String name) {
      this.name = name;
      return this;
    }

    public Builder intro(String intro) {
      this.intro = intro;
      return this;
    }

    public Builder logoUrl(String logoUrl) {
      this.logoUrl = logoUrl;
      return this;
    }

    public Builder gtype(GroupType gtype) {
      this.gtype = gtype;
      return this;
    }

    public Builder ownerId(Long ownerId) {
      this.ownerId = ownerId;
      return this;
    }

    public Builder ownerInfo(UserInfo ownerInfo) {
      this.ownerInfo = ownerInfo;
      return this;
    }

    /**
     * 创建者的基本信息
     */
    public Builder approve(GroupApprove approve) {
      this.approve = approve;
      return this;
    }

    public Builder state(GroupState state) {
      this.state = state;
      return this;
    }

    public Builder password(String password) {
      this.password = password;
      return this;
    }

    public Builder members(Integer members) {
      this.members = members;
      return this;
    }

    public Builder live(Integer live) {
      this.live = live;
      return this;
    }

    /**
     * 0无直播，1视频+音频，2仅音频
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    public Builder texasInfo(TexasRoom texasInfo) {
      this.texasInfo = texasInfo;
      return this;
    }

    public Builder gameIconUrl(String gameIconUrl) {
      this.gameIconUrl = gameIconUrl;
      return this;
    }

    public Builder code(String code) {
      this.code = code;
      return this;
    }

    @Override
    public GroupInfo build() {
      return new GroupInfo(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
