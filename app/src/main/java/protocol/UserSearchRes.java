// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Label.REPEATED;

public final class UserSearchRes extends Message {

  public static final String DEFAULT_KEYWORD = "";
  public static final Integer DEFAULT_INDEX = 0;
  public static final Integer DEFAULT_FETCHS = 0;
  public static final UserSearchBy DEFAULT_SEARCHBY = UserSearchBy.UserSearchByUnKnow;
  public static final UserSearchOrderBy DEFAULT_ORDERBY = UserSearchOrderBy.UserSearchOrderByDesc;
  public static final SexType DEFAULT_SEX = SexType.Unknow;
  public static final String DEFAULT_LOCATION = "";
  public static final Boolean DEFAULT_LIVING = false;
  public static final Integer DEFAULT_TOTALRESULTS = 0;
  public static final List<UserInfo> DEFAULT_USERS = Collections.emptyList();
  public static final Boolean DEFAULT_HASMORE = false;
  public static final Long DEFAULT_SORTKEY = 0L;

  @ProtoField(tag = 1, type = STRING)
  public final String keyword;

  @ProtoField(tag = 2, type = UINT32)
  public final Integer index;

  @ProtoField(tag = 3, type = UINT32)
  public final Integer fetchs;

  @ProtoField(tag = 5, type = ENUM)
  public final UserSearchBy searchby;

  @ProtoField(tag = 6, type = ENUM)
  public final UserSearchOrderBy orderby;

  @ProtoField(tag = 7, type = ENUM)
  public final SexType sex;

  /**
   * 性别过滤
   */
  @ProtoField(tag = 8, type = STRING)
  public final String location;

  /**
   * 地理位置过滤
   */
  @ProtoField(tag = 9, type = BOOL)
  public final Boolean living;

  /**
   * 正在直播
   */
  @ProtoField(tag = 11, type = UINT32)
  public final Integer totalresults;

  /**
   * 暂时不用
   */
  @ProtoField(tag = 12, label = REPEATED)
  public final List<UserInfo> users;

  @ProtoField(tag = 13, type = BOOL)
  public final Boolean hasmore;

  /**
   * 是否有更多内容
   */
  @ProtoField(tag = 19, type = INT64)
  public final Long sortkey;

  private UserSearchRes(Builder builder) {
    this.keyword = builder.keyword;
    this.index = builder.index;
    this.fetchs = builder.fetchs;
    this.searchby = builder.searchby;
    this.orderby = builder.orderby;
    this.sex = builder.sex;
    this.location = builder.location;
    this.living = builder.living;
    this.totalresults = builder.totalresults;
    this.users = immutableCopyOf(builder.users);
    this.hasmore = builder.hasmore;
    this.sortkey = builder.sortkey;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UserSearchRes)) return false;
    UserSearchRes o = (UserSearchRes) other;
    return equals(keyword, o.keyword)
        && equals(index, o.index)
        && equals(fetchs, o.fetchs)
        && equals(searchby, o.searchby)
        && equals(orderby, o.orderby)
        && equals(sex, o.sex)
        && equals(location, o.location)
        && equals(living, o.living)
        && equals(totalresults, o.totalresults)
        && equals(users, o.users)
        && equals(hasmore, o.hasmore)
        && equals(sortkey, o.sortkey);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = keyword != null ? keyword.hashCode() : 0;
      result = result * 37 + (index != null ? index.hashCode() : 0);
      result = result * 37 + (fetchs != null ? fetchs.hashCode() : 0);
      result = result * 37 + (searchby != null ? searchby.hashCode() : 0);
      result = result * 37 + (orderby != null ? orderby.hashCode() : 0);
      result = result * 37 + (sex != null ? sex.hashCode() : 0);
      result = result * 37 + (location != null ? location.hashCode() : 0);
      result = result * 37 + (living != null ? living.hashCode() : 0);
      result = result * 37 + (totalresults != null ? totalresults.hashCode() : 0);
      result = result * 37 + (users != null ? users.hashCode() : 1);
      result = result * 37 + (hasmore != null ? hasmore.hashCode() : 0);
      result = result * 37 + (sortkey != null ? sortkey.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<UserSearchRes> {

    public String keyword;
    public Integer index;
    public Integer fetchs;
    public UserSearchBy searchby;
    public UserSearchOrderBy orderby;
    public SexType sex;
    public String location;
    public Boolean living;
    public Integer totalresults;
    public List<UserInfo> users;
    public Boolean hasmore;
    public Long sortkey;

    public Builder() {
    }

    public Builder(UserSearchRes message) {
      super(message);
      if (message == null) return;
      this.keyword = message.keyword;
      this.index = message.index;
      this.fetchs = message.fetchs;
      this.searchby = message.searchby;
      this.orderby = message.orderby;
      this.sex = message.sex;
      this.location = message.location;
      this.living = message.living;
      this.totalresults = message.totalresults;
      this.users = copyOf(message.users);
      this.hasmore = message.hasmore;
      this.sortkey = message.sortkey;
    }

    public Builder keyword(String keyword) {
      this.keyword = keyword;
      return this;
    }

    public Builder index(Integer index) {
      this.index = index;
      return this;
    }

    public Builder fetchs(Integer fetchs) {
      this.fetchs = fetchs;
      return this;
    }

    public Builder searchby(UserSearchBy searchby) {
      this.searchby = searchby;
      return this;
    }

    public Builder orderby(UserSearchOrderBy orderby) {
      this.orderby = orderby;
      return this;
    }

    public Builder sex(SexType sex) {
      this.sex = sex;
      return this;
    }

    /**
     * 性别过滤
     */
    public Builder location(String location) {
      this.location = location;
      return this;
    }

    /**
     * 地理位置过滤
     */
    public Builder living(Boolean living) {
      this.living = living;
      return this;
    }

    /**
     * 正在直播
     */
    public Builder totalresults(Integer totalresults) {
      this.totalresults = totalresults;
      return this;
    }

    /**
     * 暂时不用
     */
    public Builder users(List<UserInfo> users) {
      this.users = checkForNulls(users);
      return this;
    }

    public Builder hasmore(Boolean hasmore) {
      this.hasmore = hasmore;
      return this;
    }

    /**
     * 是否有更多内容
     */
    public Builder sortkey(Long sortkey) {
      this.sortkey = sortkey;
      return this;
    }

    @Override
    public UserSearchRes build() {
      return new UserSearchRes(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
