// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;

public final class RoomLabel extends Message {

  public static final String DEFAULT_URL1 = "";
  public static final String DEFAULT_URL2 = "";
  public static final String DEFAULT_THEME = "";
  public static final List<RoomLabelRank> DEFAULT_CONTENT = Collections.emptyList();

  @ProtoField(tag = 1, type = STRING)
  public final String url1;

  @ProtoField(tag = 2, type = STRING)
  public final String url2;

  @ProtoField(tag = 3, type = STRING)
  public final String theme;

  @ProtoField(tag = 4, label = REPEATED)
  public final List<RoomLabelRank> content;

  private RoomLabel(Builder builder) {
    this.url1 = builder.url1;
    this.url2 = builder.url2;
    this.theme = builder.theme;
    this.content = immutableCopyOf(builder.content);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof RoomLabel)) return false;
    RoomLabel o = (RoomLabel) other;
    return equals(url1, o.url1)
        && equals(url2, o.url2)
        && equals(theme, o.theme)
        && equals(content, o.content);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = url1 != null ? url1.hashCode() : 0;
      result = result * 37 + (url2 != null ? url2.hashCode() : 0);
      result = result * 37 + (theme != null ? theme.hashCode() : 0);
      result = result * 37 + (content != null ? content.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<RoomLabel> {

    public String url1;
    public String url2;
    public String theme;
    public List<RoomLabelRank> content;

    public Builder() {
    }

    public Builder(RoomLabel message) {
      super(message);
      if (message == null) return;
      this.url1 = message.url1;
      this.url2 = message.url2;
      this.theme = message.theme;
      this.content = copyOf(message.content);
    }

    public Builder url1(String url1) {
      this.url1 = url1;
      return this;
    }

    public Builder url2(String url2) {
      this.url2 = url2;
      return this;
    }

    public Builder theme(String theme) {
      this.theme = theme;
      return this;
    }

    public Builder content(List<RoomLabelRank> content) {
      this.content = checkForNulls(content);
      return this;
    }

    @Override
    public RoomLabel build() {
      return new RoomLabel(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
