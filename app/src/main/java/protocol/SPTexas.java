// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.ProtoEnum;

public enum SPTexas
    implements ProtoEnum {
  PTexasRoomListReq(1),
  PTexasRoomListRes(2),
  PTexasJoinReq(3),
  PTexasJoinRes(4),
  PTexasDoSelectReq(5),
  PTexasDoSelectRes(6),
  PTexasHandCardReq(7),
  PTexasHandCardRes(8),
  PTexasExitRoomReq(9),
  PTexasExitRoomRes(10),
  PTexasQueueQueryReq(16),
  /**
   * 查询现在有多少人在排队
   */
  PTexasQueueQueryRes(17),
  PTexasQueueJoinReq(18),
  /**
   * 排队，如果已在队中，返回相关参数
   */
  PTexasQueueJoinRes(19),
  PTexasQueueQuitReq(20),
  PTexasQueueQuitRes(21),
  PTexasStartReq(22),
  /**
   * 开始游戏
   */
  PTexasStartRes(23),
  PTexasAddChipReq(24),
  /**
   * 补充筹码
   */
  PTexasAddChipRes(25),
  PTexasResultReq(26),
  /**
   * 获取游戏结束结算页面
   */
  PTexasResultRes(27),
  PTexasMyReadyReq(28),
  /**
   * 玩家准备
   */
  PTexasMyReadyRes(29),
  PTexasKickReq(30),
  /**
   * 替玩家出局
   */
  PTexasKickRes(31),
  PTexasQueryReq(32),
  /**
   * 查询牌局信息
   */
  PTexasQueryRes(33),
  PTexasSetReq(34),
  /**
   * 设置牌和筹码
   */
  PTexasSetRes(35),
  PTexasChipQueueReq(36),
  /**
   * 购买完筹码后更新队伍信息
   */
  PTexasChipQueueRes(37),
  PTexasMatchInfoReq(48),
  /**
   * 比赛信息
   */
  PTexasMatchInfoRes(49),
  PTexasMatchRankReq(50),
  /**
   * 比赛排行榜
   */
  PTexasMatchRankRes(51),
  PTexasUserStatReq(64),
  /**
   * 德州个人统计
   */
  PTexasUserStatRes(65),
  PTexasPlayerWarRecordReq(66),
  /**
   * 德州个人战绩
   */
  PTexasPlayerWarRecordRes(67),
  PTexasRoomWarRecordReq(68),
  /**
   * 德州房间战绩
   */
  PTexasRoomWarRecordRes(69),
  PTexasRoomSetSpeakReq(70),
  /**
   * 德州房间设置能否说话
   */
  PTexasRoomSetSpeakRes(71);

  private final int value;

  private SPTexas(int value) {
    this.value = value;
  }

  @Override
  public int getValue() {
    return value;
  }

  public static final int PTexasRoomListReq_VALUE = 1;
  public static final int PTexasRoomListRes_VALUE = 2;
  public static final int PTexasJoinReq_VALUE = 3;
  public static final int PTexasJoinRes_VALUE = 4;
  public static final int PTexasDoSelectReq_VALUE = 5;
  public static final int PTexasDoSelectRes_VALUE = 6;
  public static final int PTexasHandCardReq_VALUE = 7;
  public static final int PTexasHandCardRes_VALUE = 8;
  public static final int PTexasExitRoomReq_VALUE = 9;
  public static final int PTexasExitRoomRes_VALUE = 10;
  public static final int PTexasQueueQueryReq_VALUE = 16;
  /**
   * 查询现在有多少人在排队
   */
  public static final int PTexasQueueQueryRes_VALUE = 17;
  public static final int PTexasQueueJoinReq_VALUE = 18;
  /**
   * 排队，如果已在队中，返回相关参数
   */
  public static final int PTexasQueueJoinRes_VALUE = 19;
  public static final int PTexasQueueQuitReq_VALUE = 20;
  public static final int PTexasQueueQuitRes_VALUE = 21;
  public static final int PTexasStartReq_VALUE = 22;
  /**
   * 开始游戏
   */
  public static final int PTexasStartRes_VALUE = 23;
  public static final int PTexasAddChipReq_VALUE = 24;
  /**
   * 补充筹码
   */
  public static final int PTexasAddChipRes_VALUE = 25;
  public static final int PTexasResultReq_VALUE = 26;
  /**
   * 获取游戏结束结算页面
   */
  public static final int PTexasResultRes_VALUE = 27;
  public static final int PTexasMyReadyReq_VALUE = 28;
  /**
   * 玩家准备
   */
  public static final int PTexasMyReadyRes_VALUE = 29;
  public static final int PTexasKickReq_VALUE = 30;
  /**
   * 替玩家出局
   */
  public static final int PTexasKickRes_VALUE = 31;
  public static final int PTexasQueryReq_VALUE = 32;
  /**
   * 查询牌局信息
   */
  public static final int PTexasQueryRes_VALUE = 33;
  public static final int PTexasSetReq_VALUE = 34;
  /**
   * 设置牌和筹码
   */
  public static final int PTexasSetRes_VALUE = 35;
  public static final int PTexasChipQueueReq_VALUE = 36;
  /**
   * 购买完筹码后更新队伍信息
   */
  public static final int PTexasChipQueueRes_VALUE = 37;
  public static final int PTexasMatchInfoReq_VALUE = 48;
  /**
   * 比赛信息
   */
  public static final int PTexasMatchInfoRes_VALUE = 49;
  public static final int PTexasMatchRankReq_VALUE = 50;
  /**
   * 比赛排行榜
   */
  public static final int PTexasMatchRankRes_VALUE = 51;
  public static final int PTexasUserStatReq_VALUE = 64;
  /**
   * 德州个人统计
   */
  public static final int PTexasUserStatRes_VALUE = 65;
  public static final int PTexasPlayerWarRecordReq_VALUE = 66;
  /**
   * 德州个人战绩
   */
  public static final int PTexasPlayerWarRecordRes_VALUE = 67;
  public static final int PTexasRoomWarRecordReq_VALUE = 68;
  /**
   * 德州房间战绩
   */
  public static final int PTexasRoomWarRecordRes_VALUE = 69;
  public static final int PTexasRoomSetSpeakReq_VALUE = 70;
  /**
   * 德州房间设置能否说话
   */
  public static final int PTexasRoomSetSpeakRes_VALUE = 71;

  public static SPTexas valueOf(int value) {
    switch (value)  {
      case 1: return PTexasRoomListReq;
      case 2: return PTexasRoomListRes;
      case 3: return PTexasJoinReq;
      case 4: return PTexasJoinRes;
      case 5: return PTexasDoSelectReq;
      case 6: return PTexasDoSelectRes;
      case 7: return PTexasHandCardReq;
      case 8: return PTexasHandCardRes;
      case 9: return PTexasExitRoomReq;
      case 10: return PTexasExitRoomRes;
      case 16: return PTexasQueueQueryReq;
      case 17: return PTexasQueueQueryRes;
      case 18: return PTexasQueueJoinReq;
      case 19: return PTexasQueueJoinRes;
      case 20: return PTexasQueueQuitReq;
      case 21: return PTexasQueueQuitRes;
      case 22: return PTexasStartReq;
      case 23: return PTexasStartRes;
      case 24: return PTexasAddChipReq;
      case 25: return PTexasAddChipRes;
      case 26: return PTexasResultReq;
      case 27: return PTexasResultRes;
      case 28: return PTexasMyReadyReq;
      case 29: return PTexasMyReadyRes;
      case 30: return PTexasKickReq;
      case 31: return PTexasKickRes;
      case 32: return PTexasQueryReq;
      case 33: return PTexasQueryRes;
      case 34: return PTexasSetReq;
      case 35: return PTexasSetRes;
      case 36: return PTexasChipQueueReq;
      case 37: return PTexasChipQueueRes;
      case 48: return PTexasMatchInfoReq;
      case 49: return PTexasMatchInfoRes;
      case 50: return PTexasMatchRankReq;
      case 51: return PTexasMatchRankRes;
      case 64: return PTexasUserStatReq;
      case 65: return PTexasUserStatRes;
      case 66: return PTexasPlayerWarRecordReq;
      case 67: return PTexasPlayerWarRecordRes;
      case 68: return PTexasRoomWarRecordReq;
      case 69: return PTexasRoomWarRecordRes;
      case 70: return PTexasRoomSetSpeakReq;
      case 71: return PTexasRoomSetSpeakRes;
      default: return null;
    }
  }
}
