// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT64;

/**
 * ========== 这是一条推送消息 ===========
 */
public final class UserMsg extends Message {

  public static final Long DEFAULT_REVISION = 0L;
  public static final MessageContentType DEFAULT_CONTENTTYPE = MessageContentType.MessageContentTypeTxt;
  public static final String DEFAULT_MESSAGE = "";
  public static final Long DEFAULT_TIMESTAMP = 0L;
  public static final UserMsgType DEFAULT_MSGTYPE = UserMsgType.UserMsgReceived;

  @ProtoField(tag = 1, type = UINT64)
  public final Long revision;

  @ProtoField(tag = 2, type = ENUM)
  public final MessageContentType contentType;

  @ProtoField(tag = 3, type = STRING)
  public final String message;

  @ProtoField(tag = 4, type = INT64)
  public final Long timestamp;

  /**
   * 时间，秒
   */
  @ProtoField(tag = 5, type = ENUM)
  public final UserMsgType msgtype;

  @ProtoField(tag = 6)
  public final UserInfo userinfo;

  private UserMsg(Builder builder) {
    this.revision = builder.revision;
    this.contentType = builder.contentType;
    this.message = builder.message;
    this.timestamp = builder.timestamp;
    this.msgtype = builder.msgtype;
    this.userinfo = builder.userinfo;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UserMsg)) return false;
    UserMsg o = (UserMsg) other;
    return equals(revision, o.revision)
        && equals(contentType, o.contentType)
        && equals(message, o.message)
        && equals(timestamp, o.timestamp)
        && equals(msgtype, o.msgtype)
        && equals(userinfo, o.userinfo);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = revision != null ? revision.hashCode() : 0;
      result = result * 37 + (contentType != null ? contentType.hashCode() : 0);
      result = result * 37 + (message != null ? message.hashCode() : 0);
      result = result * 37 + (timestamp != null ? timestamp.hashCode() : 0);
      result = result * 37 + (msgtype != null ? msgtype.hashCode() : 0);
      result = result * 37 + (userinfo != null ? userinfo.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<UserMsg> {

    public Long revision;
    public MessageContentType contentType;
    public String message;
    public Long timestamp;
    public UserMsgType msgtype;
    public UserInfo userinfo;

    public Builder() {
    }

    public Builder(UserMsg message) {
      super(message);
      if (message == null) return;
      this.revision = message.revision;
      this.contentType = message.contentType;
      this.message = message.message;
      this.timestamp = message.timestamp;
      this.msgtype = message.msgtype;
      this.userinfo = message.userinfo;
    }

    public Builder revision(Long revision) {
      this.revision = revision;
      return this;
    }

    public Builder contentType(MessageContentType contentType) {
      this.contentType = contentType;
      return this;
    }

    public Builder message(String message) {
      this.message = message;
      return this;
    }

    public Builder timestamp(Long timestamp) {
      this.timestamp = timestamp;
      return this;
    }

    /**
     * 时间，秒
     */
    public Builder msgtype(UserMsgType msgtype) {
      this.msgtype = msgtype;
      return this;
    }

    public Builder userinfo(UserInfo userinfo) {
      this.userinfo = userinfo;
      return this;
    }

    @Override
    public UserMsg build() {
      return new UserMsg(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
