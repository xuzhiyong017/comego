// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Datatype.UINT64;
import static com.squareup.wire.Message.Label.REPEATED;

public final class GroupMsgSearchReq extends Message {

  public static final Long DEFAULT_GID = 0L;
  public static final Long DEFAULT_INDEX = 0L;
  public static final Integer DEFAULT_FETCHS = 0;
  public static final GroupMsgType DEFAULT_MSGTYPE = GroupMsgType.GroupMsgNormal;
  public static final String DEFAULT_PASSWORD = "";
  public static final List<MessageContentType> DEFAULT_CONTENTTYPES = Collections.emptyList();
  public static final GroupMsgSortBy DEFAULT_SORTBY = GroupMsgSortBy.GroupMsgSortByRevision;
  public static final GroupMsgOrderBy DEFAULT_ORDERBY = GroupMsgOrderBy.GroupMsgOrderByDesc;
  public static final Boolean DEFAULT_COMPRESS = false;
  public static final Long DEFAULT_CACHEKEY = 0L;

  @ProtoField(tag = 1, type = UINT64)
  public final Long gid;

  @ProtoField(tag = 2, type = UINT64)
  public final Long index;

  @ProtoField(tag = 3, type = UINT32)
  public final Integer fetchs;

  /**
   * 这个参数如果不为0，从指定版本读取fetchs个结果返回
   */
  @ProtoField(tag = 4, type = ENUM)
  public final GroupMsgType msgtype;

  @ProtoField(tag = 5, type = STRING)
  public final String password;

  /**
   * 群密码
   */
  @ProtoField(tag = 6, type = ENUM, label = REPEATED)
  public final List<MessageContentType> contentTypes;

  @ProtoField(tag = 7, type = ENUM)
  public final GroupMsgSortBy sortby;

  @ProtoField(tag = 8, type = ENUM)
  public final GroupMsgOrderBy orderby;

  @ProtoField(tag = 9, type = BOOL)
  public final Boolean compress;

  @ProtoField(tag = 10, type = INT64)
  public final Long cacheKey;

  private GroupMsgSearchReq(Builder builder) {
    this.gid = builder.gid;
    this.index = builder.index;
    this.fetchs = builder.fetchs;
    this.msgtype = builder.msgtype;
    this.password = builder.password;
    this.contentTypes = immutableCopyOf(builder.contentTypes);
    this.sortby = builder.sortby;
    this.orderby = builder.orderby;
    this.compress = builder.compress;
    this.cacheKey = builder.cacheKey;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GroupMsgSearchReq)) return false;
    GroupMsgSearchReq o = (GroupMsgSearchReq) other;
    return equals(gid, o.gid)
        && equals(index, o.index)
        && equals(fetchs, o.fetchs)
        && equals(msgtype, o.msgtype)
        && equals(password, o.password)
        && equals(contentTypes, o.contentTypes)
        && equals(sortby, o.sortby)
        && equals(orderby, o.orderby)
        && equals(compress, o.compress)
        && equals(cacheKey, o.cacheKey);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = gid != null ? gid.hashCode() : 0;
      result = result * 37 + (index != null ? index.hashCode() : 0);
      result = result * 37 + (fetchs != null ? fetchs.hashCode() : 0);
      result = result * 37 + (msgtype != null ? msgtype.hashCode() : 0);
      result = result * 37 + (password != null ? password.hashCode() : 0);
      result = result * 37 + (contentTypes != null ? contentTypes.hashCode() : 1);
      result = result * 37 + (sortby != null ? sortby.hashCode() : 0);
      result = result * 37 + (orderby != null ? orderby.hashCode() : 0);
      result = result * 37 + (compress != null ? compress.hashCode() : 0);
      result = result * 37 + (cacheKey != null ? cacheKey.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<GroupMsgSearchReq> {

    public Long gid;
    public Long index;
    public Integer fetchs;
    public GroupMsgType msgtype;
    public String password;
    public List<MessageContentType> contentTypes;
    public GroupMsgSortBy sortby;
    public GroupMsgOrderBy orderby;
    public Boolean compress;
    public Long cacheKey;

    public Builder() {
    }

    public Builder(GroupMsgSearchReq message) {
      super(message);
      if (message == null) return;
      this.gid = message.gid;
      this.index = message.index;
      this.fetchs = message.fetchs;
      this.msgtype = message.msgtype;
      this.password = message.password;
      this.contentTypes = copyOf(message.contentTypes);
      this.sortby = message.sortby;
      this.orderby = message.orderby;
      this.compress = message.compress;
      this.cacheKey = message.cacheKey;
    }

    public Builder gid(Long gid) {
      this.gid = gid;
      return this;
    }

    public Builder index(Long index) {
      this.index = index;
      return this;
    }

    public Builder fetchs(Integer fetchs) {
      this.fetchs = fetchs;
      return this;
    }

    /**
     * 这个参数如果不为0，从指定版本读取fetchs个结果返回
     */
    public Builder msgtype(GroupMsgType msgtype) {
      this.msgtype = msgtype;
      return this;
    }

    public Builder password(String password) {
      this.password = password;
      return this;
    }

    /**
     * 群密码
     */
    public Builder contentTypes(List<MessageContentType> contentTypes) {
      this.contentTypes = checkForNulls(contentTypes);
      return this;
    }

    public Builder sortby(GroupMsgSortBy sortby) {
      this.sortby = sortby;
      return this;
    }

    public Builder orderby(GroupMsgOrderBy orderby) {
      this.orderby = orderby;
      return this;
    }

    public Builder compress(Boolean compress) {
      this.compress = compress;
      return this;
    }

    public Builder cacheKey(Long cacheKey) {
      this.cacheKey = cacheKey;
      return this;
    }

    @Override
    public GroupMsgSearchReq build() {
      return new GroupMsgSearchReq(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
