// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class UserHeartBeatReq extends Message {

  public static final Integer DEFAULT_FLAGS = 0;
  public static final Long DEFAULT_CURRENTTIME = 0L;
  public static final Long DEFAULT_GIFTLISTVERSION = 0L;

  @ProtoField(tag = 1, type = UINT32, label = REQUIRED)
  public final Integer flags;

  @ProtoField(tag = 2, type = INT64)
  public final Long currenttime;

  /**
   * 当时服务器时间
   */
  @ProtoField(tag = 101, type = INT64)
  public final Long giftListVersion;

  private UserHeartBeatReq(Builder builder) {
    this.flags = builder.flags;
    this.currenttime = builder.currenttime;
    this.giftListVersion = builder.giftListVersion;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UserHeartBeatReq)) return false;
    UserHeartBeatReq o = (UserHeartBeatReq) other;
    return equals(flags, o.flags)
        && equals(currenttime, o.currenttime)
        && equals(giftListVersion, o.giftListVersion);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = flags != null ? flags.hashCode() : 0;
      result = result * 37 + (currenttime != null ? currenttime.hashCode() : 0);
      result = result * 37 + (giftListVersion != null ? giftListVersion.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<UserHeartBeatReq> {

    public Integer flags;
    public Long currenttime;
    public Long giftListVersion;

    public Builder() {
    }

    public Builder(UserHeartBeatReq message) {
      super(message);
      if (message == null) return;
      this.flags = message.flags;
      this.currenttime = message.currenttime;
      this.giftListVersion = message.giftListVersion;
    }

    public Builder flags(Integer flags) {
      this.flags = flags;
      return this;
    }

    public Builder currenttime(Long currenttime) {
      this.currenttime = currenttime;
      return this;
    }

    /**
     * 当时服务器时间
     */
    public Builder giftListVersion(Long giftListVersion) {
      this.giftListVersion = giftListVersion;
      return this;
    }

    @Override
    public UserHeartBeatReq build() {
      checkRequiredFields();
      return new UserHeartBeatReq(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
