// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.UINT64;

public final class UserForbidReq extends Message {

  public static final Long DEFAULT_UID = 0L;
  public static final UserForbidMethod DEFAULT_METHOD = UserForbidMethod.ForbidUid;
  public static final Long DEFAULT_EXPIRED = 0L;
  public static final Boolean DEFAULT_CANCEL = false;

  @ProtoField(tag = 1, type = UINT64)
  public final Long uid;

  @ProtoField(tag = 2, type = ENUM)
  public final UserForbidMethod method;

  @ProtoField(tag = 3, type = INT64)
  public final Long expired;

  @ProtoField(tag = 4, type = BOOL)
  public final Boolean cancel;

  private UserForbidReq(Builder builder) {
    this.uid = builder.uid;
    this.method = builder.method;
    this.expired = builder.expired;
    this.cancel = builder.cancel;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UserForbidReq)) return false;
    UserForbidReq o = (UserForbidReq) other;
    return equals(uid, o.uid)
        && equals(method, o.method)
        && equals(expired, o.expired)
        && equals(cancel, o.cancel);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = uid != null ? uid.hashCode() : 0;
      result = result * 37 + (method != null ? method.hashCode() : 0);
      result = result * 37 + (expired != null ? expired.hashCode() : 0);
      result = result * 37 + (cancel != null ? cancel.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<UserForbidReq> {

    public Long uid;
    public UserForbidMethod method;
    public Long expired;
    public Boolean cancel;

    public Builder() {
    }

    public Builder(UserForbidReq message) {
      super(message);
      if (message == null) return;
      this.uid = message.uid;
      this.method = message.method;
      this.expired = message.expired;
      this.cancel = message.cancel;
    }

    public Builder uid(Long uid) {
      this.uid = uid;
      return this;
    }

    public Builder method(UserForbidMethod method) {
      this.method = method;
      return this;
    }

    public Builder expired(Long expired) {
      this.expired = expired;
      return this;
    }

    public Builder cancel(Boolean cancel) {
      this.cancel = cancel;
      return this;
    }

    @Override
    public UserForbidReq build() {
      return new UserForbidReq(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
