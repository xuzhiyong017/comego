// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Datatype.UINT64;

public final class TexasMatchInfoRes extends Message {

  public static final Long DEFAULT_CURRENTSERVERTIME = 0L;
  public static final Long DEFAULT_OWNERUID = 0L;
  public static final Integer DEFAULT_MYRANK = 0;

  @ProtoField(tag = 1)
  public final TexasMatchInfo texasMatchInfo;

  @ProtoField(tag = 2, type = INT64)
  public final Long currentServerTime;

  /**
   * 当前服务器时间
   */
  @ProtoField(tag = 3, type = UINT64)
  public final Long ownerUid;

  @ProtoField(tag = 4, type = UINT32)
  public final Integer myRank;

  /**
   * 我的排名
   */
  @ProtoField(tag = 5)
  public final RoomLabel label;

  private TexasMatchInfoRes(Builder builder) {
    this.texasMatchInfo = builder.texasMatchInfo;
    this.currentServerTime = builder.currentServerTime;
    this.ownerUid = builder.ownerUid;
    this.myRank = builder.myRank;
    this.label = builder.label;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof TexasMatchInfoRes)) return false;
    TexasMatchInfoRes o = (TexasMatchInfoRes) other;
    return equals(texasMatchInfo, o.texasMatchInfo)
        && equals(currentServerTime, o.currentServerTime)
        && equals(ownerUid, o.ownerUid)
        && equals(myRank, o.myRank)
        && equals(label, o.label);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = texasMatchInfo != null ? texasMatchInfo.hashCode() : 0;
      result = result * 37 + (currentServerTime != null ? currentServerTime.hashCode() : 0);
      result = result * 37 + (ownerUid != null ? ownerUid.hashCode() : 0);
      result = result * 37 + (myRank != null ? myRank.hashCode() : 0);
      result = result * 37 + (label != null ? label.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<TexasMatchInfoRes> {

    public TexasMatchInfo texasMatchInfo;
    public Long currentServerTime;
    public Long ownerUid;
    public Integer myRank;
    public RoomLabel label;

    public Builder() {
    }

    public Builder(TexasMatchInfoRes message) {
      super(message);
      if (message == null) return;
      this.texasMatchInfo = message.texasMatchInfo;
      this.currentServerTime = message.currentServerTime;
      this.ownerUid = message.ownerUid;
      this.myRank = message.myRank;
      this.label = message.label;
    }

    public Builder texasMatchInfo(TexasMatchInfo texasMatchInfo) {
      this.texasMatchInfo = texasMatchInfo;
      return this;
    }

    public Builder currentServerTime(Long currentServerTime) {
      this.currentServerTime = currentServerTime;
      return this;
    }

    /**
     * 当前服务器时间
     */
    public Builder ownerUid(Long ownerUid) {
      this.ownerUid = ownerUid;
      return this;
    }

    public Builder myRank(Integer myRank) {
      this.myRank = myRank;
      return this;
    }

    /**
     * 我的排名
     */
    public Builder label(RoomLabel label) {
      this.label = label;
      return this;
    }

    @Override
    public TexasMatchInfoRes build() {
      return new TexasMatchInfoRes(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
