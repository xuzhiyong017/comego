// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.FLOAT;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT64;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class UserRecharge extends Message {

  public static final Long DEFAULT_UID = 0L;
  public static final String DEFAULT_ACCOUNT = "";
  public static final String DEFAULT_PAYCHANNEL = "";
  public static final Float DEFAULT_MONEY = 0F;
  public static final Long DEFAULT_MGOLD = 0L;
  public static final String DEFAULT_RTIME = "";

  @ProtoField(tag = 1, type = UINT64, label = REQUIRED)
  public final Long uid;

  @ProtoField(tag = 2, type = STRING)
  public final String account;

  @ProtoField(tag = 3, type = STRING)
  public final String payChannel;

  @ProtoField(tag = 4, type = FLOAT)
  public final Float money;

  @ProtoField(tag = 5, type = UINT64)
  public final Long mGold;

  @ProtoField(tag = 6, type = STRING)
  public final String rTime;

  private UserRecharge(Builder builder) {
    this.uid = builder.uid;
    this.account = builder.account;
    this.payChannel = builder.payChannel;
    this.money = builder.money;
    this.mGold = builder.mGold;
    this.rTime = builder.rTime;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UserRecharge)) return false;
    UserRecharge o = (UserRecharge) other;
    return equals(uid, o.uid)
        && equals(account, o.account)
        && equals(payChannel, o.payChannel)
        && equals(money, o.money)
        && equals(mGold, o.mGold)
        && equals(rTime, o.rTime);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = uid != null ? uid.hashCode() : 0;
      result = result * 37 + (account != null ? account.hashCode() : 0);
      result = result * 37 + (payChannel != null ? payChannel.hashCode() : 0);
      result = result * 37 + (money != null ? money.hashCode() : 0);
      result = result * 37 + (mGold != null ? mGold.hashCode() : 0);
      result = result * 37 + (rTime != null ? rTime.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<UserRecharge> {

    public Long uid;
    public String account;
    public String payChannel;
    public Float money;
    public Long mGold;
    public String rTime;

    public Builder() {
    }

    public Builder(UserRecharge message) {
      super(message);
      if (message == null) return;
      this.uid = message.uid;
      this.account = message.account;
      this.payChannel = message.payChannel;
      this.money = message.money;
      this.mGold = message.mGold;
      this.rTime = message.rTime;
    }

    public Builder uid(Long uid) {
      this.uid = uid;
      return this;
    }

    public Builder account(String account) {
      this.account = account;
      return this;
    }

    public Builder payChannel(String payChannel) {
      this.payChannel = payChannel;
      return this;
    }

    public Builder money(Float money) {
      this.money = money;
      return this;
    }

    public Builder mGold(Long mGold) {
      this.mGold = mGold;
      return this;
    }

    public Builder rTime(String rTime) {
      this.rTime = rTime;
      return this;
    }

    @Override
    public UserRecharge build() {
      checkRequiredFields();
      return new UserRecharge(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
