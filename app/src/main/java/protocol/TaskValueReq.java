// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.UINT64;
import static com.squareup.wire.Message.Label.REPEATED;

public final class TaskValueReq extends Message {

  public static final Long DEFAULT_UID = 0L;
  public static final List<TaskValueReqItem> DEFAULT_ITEMS = Collections.emptyList();

  @ProtoField(tag = 1, type = UINT64)
  public final Long uid;

  /**
   * 任务成就面板时为0，个人主页查看时带uid
   */
  @ProtoField(tag = 2, label = REPEATED)
  public final List<TaskValueReqItem> items;

  private TaskValueReq(Builder builder) {
    this.uid = builder.uid;
    this.items = immutableCopyOf(builder.items);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof TaskValueReq)) return false;
    TaskValueReq o = (TaskValueReq) other;
    return equals(uid, o.uid)
        && equals(items, o.items);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = uid != null ? uid.hashCode() : 0;
      result = result * 37 + (items != null ? items.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<TaskValueReq> {

    public Long uid;
    public List<TaskValueReqItem> items;

    public Builder() {
    }

    public Builder(TaskValueReq message) {
      super(message);
      if (message == null) return;
      this.uid = message.uid;
      this.items = copyOf(message.items);
    }

    public Builder uid(Long uid) {
      this.uid = uid;
      return this;
    }

    /**
     * 任务成就面板时为0，个人主页查看时带uid
     */
    public Builder items(List<TaskValueReqItem> items) {
      this.items = checkForNulls(items);
      return this;
    }

    @Override
    public TaskValueReq build() {
      return new TaskValueReq(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
