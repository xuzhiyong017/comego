// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.SINT64;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Datatype.UINT64;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class UserInfo extends Message {

  public static final Long DEFAULT_UID = 0L;
  public static final String DEFAULT_NICK = "";
  public static final String DEFAULT_SIGNATURE = "";
  public static final String DEFAULT_LOGOURL = "";
  public static final SexType DEFAULT_SEX = SexType.Unknow;
  public static final Long DEFAULT_BIRTHDAY = 0L;
  public static final String DEFAULT_LOCATION = "";
  public static final String DEFAULT_ADDRESS = "";
  public static final String DEFAULT_MOBILEPHONE = "";
  public static final Long DEFAULT_INVITEID = 0L;
  public static final Integer DEFAULT_LV = 0;
  public static final String DEFAULT_EXTENDJSON = "";
  public static final Long DEFAULT_LIVEROOMGID = 0L;
  public static final Integer DEFAULT_SORTORDER = 0;
  public static final Long DEFAULT_CREATETIME = 0L;
  public static final Integer DEFAULT_ROLETYPE = 0;
  public static final Long DEFAULT_LOGINTIME = 0L;
  public static final AccountType DEFAULT_ACCOUNTTYPE = AccountType.AccountType_Mac;
  public static final Long DEFAULT_COOKIETIME = 0L;
  public static final Integer DEFAULT_FLAGS = 0;
  public static final Long DEFAULT_YYUID = 0L;

  /**
   * basic properties
   */
  @ProtoField(tag = 1, type = UINT64, label = REQUIRED)
  public final Long uid;

  @ProtoField(tag = 2, type = STRING)
  public final String nick;

  @ProtoField(tag = 3, type = STRING)
  public final String signature;

  @ProtoField(tag = 4, type = STRING)
  public final String logourl;

  @ProtoField(tag = 5, type = ENUM)
  public final SexType sex;

  @ProtoField(tag = 6, type = SINT64)
  public final Long birthday;

  @ProtoField(tag = 7, type = STRING)
  public final String location;

  @ProtoField(tag = 8, type = STRING)
  public final String address;

  @ProtoField(tag = 9, type = STRING)
  public final String mobilephone;

  @ProtoField(tag = 10, type = UINT64)
  public final Long inviteId;

  @ProtoField(tag = 11, type = UINT32)
  public final Integer lv;

  @ProtoField(tag = 12, type = STRING)
  public final String extendJson;

  /**
   * live room
   */
  @ProtoField(tag = 20)
  public final GroupInfo liveRoom;

  @ProtoField(tag = 21, type = UINT64)
  public final Long liveRoomGid;

  /**
   * 客户端可以不管这个
   */
  @ProtoField(tag = 22, type = INT32)
  public final Integer sortOrder;

  /**
   * 客户端可以不管这个
   * system properties
   */
  @ProtoField(tag = 50, type = INT64)
  public final Long createtime;

  @ProtoField(tag = 51, type = UINT32)
  public final Integer roletype;

  @ProtoField(tag = 52, type = INT64)
  public final Long loginTime;

  @ProtoField(tag = 53, type = ENUM)
  public final AccountType accountType;

  @ProtoField(tag = 54, type = INT64)
  public final Long cookieTime;

  @ProtoField(tag = 55, type = UINT32)
  public final Integer flags;

  @ProtoField(tag = 60, type = UINT64)
  public final Long yyuid;

  private UserInfo(Builder builder) {
    this.uid = builder.uid;
    this.nick = builder.nick;
    this.signature = builder.signature;
    this.logourl = builder.logourl;
    this.sex = builder.sex;
    this.birthday = builder.birthday;
    this.location = builder.location;
    this.address = builder.address;
    this.mobilephone = builder.mobilephone;
    this.inviteId = builder.inviteId;
    this.lv = builder.lv;
    this.extendJson = builder.extendJson;
    this.liveRoom = builder.liveRoom;
    this.liveRoomGid = builder.liveRoomGid;
    this.sortOrder = builder.sortOrder;
    this.createtime = builder.createtime;
    this.roletype = builder.roletype;
    this.loginTime = builder.loginTime;
    this.accountType = builder.accountType;
    this.cookieTime = builder.cookieTime;
    this.flags = builder.flags;
    this.yyuid = builder.yyuid;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UserInfo)) return false;
    UserInfo o = (UserInfo) other;
    return equals(uid, o.uid)
        && equals(nick, o.nick)
        && equals(signature, o.signature)
        && equals(logourl, o.logourl)
        && equals(sex, o.sex)
        && equals(birthday, o.birthday)
        && equals(location, o.location)
        && equals(address, o.address)
        && equals(mobilephone, o.mobilephone)
        && equals(inviteId, o.inviteId)
        && equals(lv, o.lv)
        && equals(extendJson, o.extendJson)
        && equals(liveRoom, o.liveRoom)
        && equals(liveRoomGid, o.liveRoomGid)
        && equals(sortOrder, o.sortOrder)
        && equals(createtime, o.createtime)
        && equals(roletype, o.roletype)
        && equals(loginTime, o.loginTime)
        && equals(accountType, o.accountType)
        && equals(cookieTime, o.cookieTime)
        && equals(flags, o.flags)
        && equals(yyuid, o.yyuid);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = uid != null ? uid.hashCode() : 0;
      result = result * 37 + (nick != null ? nick.hashCode() : 0);
      result = result * 37 + (signature != null ? signature.hashCode() : 0);
      result = result * 37 + (logourl != null ? logourl.hashCode() : 0);
      result = result * 37 + (sex != null ? sex.hashCode() : 0);
      result = result * 37 + (birthday != null ? birthday.hashCode() : 0);
      result = result * 37 + (location != null ? location.hashCode() : 0);
      result = result * 37 + (address != null ? address.hashCode() : 0);
      result = result * 37 + (mobilephone != null ? mobilephone.hashCode() : 0);
      result = result * 37 + (inviteId != null ? inviteId.hashCode() : 0);
      result = result * 37 + (lv != null ? lv.hashCode() : 0);
      result = result * 37 + (extendJson != null ? extendJson.hashCode() : 0);
      result = result * 37 + (liveRoom != null ? liveRoom.hashCode() : 0);
      result = result * 37 + (liveRoomGid != null ? liveRoomGid.hashCode() : 0);
      result = result * 37 + (sortOrder != null ? sortOrder.hashCode() : 0);
      result = result * 37 + (createtime != null ? createtime.hashCode() : 0);
      result = result * 37 + (roletype != null ? roletype.hashCode() : 0);
      result = result * 37 + (loginTime != null ? loginTime.hashCode() : 0);
      result = result * 37 + (accountType != null ? accountType.hashCode() : 0);
      result = result * 37 + (cookieTime != null ? cookieTime.hashCode() : 0);
      result = result * 37 + (flags != null ? flags.hashCode() : 0);
      result = result * 37 + (yyuid != null ? yyuid.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<UserInfo> {

    public Long uid;
    public String nick;
    public String signature;
    public String logourl;
    public SexType sex;
    public Long birthday;
    public String location;
    public String address;
    public String mobilephone;
    public Long inviteId;
    public Integer lv;
    public String extendJson;
    public GroupInfo liveRoom;
    public Long liveRoomGid;
    public Integer sortOrder;
    public Long createtime;
    public Integer roletype;
    public Long loginTime;
    public AccountType accountType;
    public Long cookieTime;
    public Integer flags;
    public Long yyuid;

    public Builder() {
    }

    public Builder(UserInfo message) {
      super(message);
      if (message == null) return;
      this.uid = message.uid;
      this.nick = message.nick;
      this.signature = message.signature;
      this.logourl = message.logourl;
      this.sex = message.sex;
      this.birthday = message.birthday;
      this.location = message.location;
      this.address = message.address;
      this.mobilephone = message.mobilephone;
      this.inviteId = message.inviteId;
      this.lv = message.lv;
      this.extendJson = message.extendJson;
      this.liveRoom = message.liveRoom;
      this.liveRoomGid = message.liveRoomGid;
      this.sortOrder = message.sortOrder;
      this.createtime = message.createtime;
      this.roletype = message.roletype;
      this.loginTime = message.loginTime;
      this.accountType = message.accountType;
      this.cookieTime = message.cookieTime;
      this.flags = message.flags;
      this.yyuid = message.yyuid;
    }

    /**
     * basic properties
     */
    public Builder uid(Long uid) {
      this.uid = uid;
      return this;
    }

    public Builder nick(String nick) {
      this.nick = nick;
      return this;
    }

    public Builder signature(String signature) {
      this.signature = signature;
      return this;
    }

    public Builder logourl(String logourl) {
      this.logourl = logourl;
      return this;
    }

    public Builder sex(SexType sex) {
      this.sex = sex;
      return this;
    }

    public Builder birthday(Long birthday) {
      this.birthday = birthday;
      return this;
    }

    public Builder location(String location) {
      this.location = location;
      return this;
    }

    public Builder address(String address) {
      this.address = address;
      return this;
    }

    public Builder mobilephone(String mobilephone) {
      this.mobilephone = mobilephone;
      return this;
    }

    public Builder inviteId(Long inviteId) {
      this.inviteId = inviteId;
      return this;
    }

    public Builder lv(Integer lv) {
      this.lv = lv;
      return this;
    }

    public Builder extendJson(String extendJson) {
      this.extendJson = extendJson;
      return this;
    }

    /**
     * live room
     */
    public Builder liveRoom(GroupInfo liveRoom) {
      this.liveRoom = liveRoom;
      return this;
    }

    public Builder liveRoomGid(Long liveRoomGid) {
      this.liveRoomGid = liveRoomGid;
      return this;
    }

    /**
     * 客户端可以不管这个
     */
    public Builder sortOrder(Integer sortOrder) {
      this.sortOrder = sortOrder;
      return this;
    }

    /**
     * 客户端可以不管这个
     * system properties
     */
    public Builder createtime(Long createtime) {
      this.createtime = createtime;
      return this;
    }

    public Builder roletype(Integer roletype) {
      this.roletype = roletype;
      return this;
    }

    public Builder loginTime(Long loginTime) {
      this.loginTime = loginTime;
      return this;
    }

    public Builder accountType(AccountType accountType) {
      this.accountType = accountType;
      return this;
    }

    public Builder cookieTime(Long cookieTime) {
      this.cookieTime = cookieTime;
      return this;
    }

    public Builder flags(Integer flags) {
      this.flags = flags;
      return this;
    }

    public Builder yyuid(Long yyuid) {
      this.yyuid = yyuid;
      return this;
    }

    @Override
    public UserInfo build() {
      checkRequiredFields();
      return new UserInfo(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
