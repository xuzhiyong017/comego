// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class DrawPoint extends Message {

  public static final Integer DEFAULT_X = 0;
  public static final Integer DEFAULT_Y = 0;

  @ProtoField(tag = 1, type = UINT32, label = REQUIRED)
  public final Integer x;

  @ProtoField(tag = 2, type = UINT32, label = REQUIRED)
  public final Integer y;

  private DrawPoint(Builder builder) {
    this.x = builder.x;
    this.y = builder.y;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof DrawPoint)) return false;
    DrawPoint o = (DrawPoint) other;
    return equals(x, o.x)
        && equals(y, o.y);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = x != null ? x.hashCode() : 0;
      result = result * 37 + (y != null ? y.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<DrawPoint> {

    public Integer x;
    public Integer y;

    public Builder() {
    }

    public Builder(DrawPoint message) {
      super(message);
      if (message == null) return;
      this.x = message.x;
      this.y = message.y;
    }

    public Builder x(Integer x) {
      this.x = x;
      return this;
    }

    public Builder y(Integer y) {
      this.y = y;
      return this;
    }

    @Override
    public DrawPoint build() {
      checkRequiredFields();
      return new DrawPoint(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
