// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Datatype.UINT64;
import static com.squareup.wire.Message.Label.REPEATED;

public final class GroupMemberListPush extends Message {

  public static final Long DEFAULT_GID = 0L;
  public static final Integer DEFAULT_TOTALRESULTS = 0;
  public static final List<GroupMember> DEFAULT_MEMBERS = Collections.emptyList();

  @ProtoField(tag = 1, type = UINT64)
  public final Long gid;

  @ProtoField(tag = 2, type = UINT32)
  public final Integer totalresults;

  @ProtoField(tag = 9, label = REPEATED)
  public final List<GroupMember> members;

  private GroupMemberListPush(Builder builder) {
    this.gid = builder.gid;
    this.totalresults = builder.totalresults;
    this.members = immutableCopyOf(builder.members);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GroupMemberListPush)) return false;
    GroupMemberListPush o = (GroupMemberListPush) other;
    return equals(gid, o.gid)
        && equals(totalresults, o.totalresults)
        && equals(members, o.members);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = gid != null ? gid.hashCode() : 0;
      result = result * 37 + (totalresults != null ? totalresults.hashCode() : 0);
      result = result * 37 + (members != null ? members.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<GroupMemberListPush> {

    public Long gid;
    public Integer totalresults;
    public List<GroupMember> members;

    public Builder() {
    }

    public Builder(GroupMemberListPush message) {
      super(message);
      if (message == null) return;
      this.gid = message.gid;
      this.totalresults = message.totalresults;
      this.members = copyOf(message.members);
    }

    public Builder gid(Long gid) {
      this.gid = gid;
      return this;
    }

    public Builder totalresults(Integer totalresults) {
      this.totalresults = totalresults;
      return this;
    }

    public Builder members(List<GroupMember> members) {
      this.members = checkForNulls(members);
      return this;
    }

    @Override
    public GroupMemberListPush build() {
      return new GroupMemberListPush(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
