// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Datatype.UINT64;

/**
 * 同步群消息：
 */
public final class GroupMsgReq extends Message {

  public static final Long DEFAULT_GID = 0L;
  public static final Long DEFAULT_REVISION = 0L;
  public static final Integer DEFAULT_FETCHS = 0;
  public static final Integer DEFAULT_TOPN = 0;
  public static final String DEFAULT_PASSWORD = "";

  @ProtoField(tag = 1, type = UINT64)
  public final Long gid;

  @ProtoField(tag = 2, type = UINT64)
  public final Long revision;

  @ProtoField(tag = 3, type = UINT32)
  public final Integer fetchs;

  /**
   * 这个参数如果不为0，从指定版本读取fetchs个结果返回
   */
  @ProtoField(tag = 4, type = UINT32)
  public final Integer topn;

  /**
   * 这个参数如果不为0且fetchs为0，读取topn个最新的结果返回
   */
  @ProtoField(tag = 5, type = STRING)
  public final String password;

  private GroupMsgReq(Builder builder) {
    this.gid = builder.gid;
    this.revision = builder.revision;
    this.fetchs = builder.fetchs;
    this.topn = builder.topn;
    this.password = builder.password;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GroupMsgReq)) return false;
    GroupMsgReq o = (GroupMsgReq) other;
    return equals(gid, o.gid)
        && equals(revision, o.revision)
        && equals(fetchs, o.fetchs)
        && equals(topn, o.topn)
        && equals(password, o.password);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = gid != null ? gid.hashCode() : 0;
      result = result * 37 + (revision != null ? revision.hashCode() : 0);
      result = result * 37 + (fetchs != null ? fetchs.hashCode() : 0);
      result = result * 37 + (topn != null ? topn.hashCode() : 0);
      result = result * 37 + (password != null ? password.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<GroupMsgReq> {

    public Long gid;
    public Long revision;
    public Integer fetchs;
    public Integer topn;
    public String password;

    public Builder() {
    }

    public Builder(GroupMsgReq message) {
      super(message);
      if (message == null) return;
      this.gid = message.gid;
      this.revision = message.revision;
      this.fetchs = message.fetchs;
      this.topn = message.topn;
      this.password = message.password;
    }

    public Builder gid(Long gid) {
      this.gid = gid;
      return this;
    }

    public Builder revision(Long revision) {
      this.revision = revision;
      return this;
    }

    public Builder fetchs(Integer fetchs) {
      this.fetchs = fetchs;
      return this;
    }

    /**
     * 这个参数如果不为0，从指定版本读取fetchs个结果返回
     */
    public Builder topn(Integer topn) {
      this.topn = topn;
      return this;
    }

    /**
     * 这个参数如果不为0且fetchs为0，读取topn个最新的结果返回
     */
    public Builder password(String password) {
      this.password = password;
      return this;
    }

    @Override
    public GroupMsgReq build() {
      return new GroupMsgReq(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
