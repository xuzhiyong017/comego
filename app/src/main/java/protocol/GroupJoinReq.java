// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Datatype.UINT64;

/**
 * 申请加入群组
 */
public final class GroupJoinReq extends Message {

  public static final Long DEFAULT_GID = 0L;
  public static final String DEFAULT_PASSWORD = "";
  public static final Integer DEFAULT_TEXASJOINSEAT = 0;
  public static final Integer DEFAULT_BETID = 0;
  public static final Boolean DEFAULT_FORCEQUITOTHERS = false;

  @ProtoField(tag = 1, type = UINT64)
  public final Long gid;

  @ProtoField(tag = 2, type = STRING)
  public final String password;

  /**
   * 创建者表示这是个加密的房间，其它进入加密房间也是填密码
   */
  @ProtoField(tag = 3, type = UINT32)
  public final Integer texasJoinSeat;

  /**
   * 快速加入游戏，普通用户快
   */
  @ProtoField(tag = 4, type = UINT32)
  public final Integer betId;

  /**
   * 小盲注，最小大携带
   */
  @ProtoField(tag = 5, type = BOOL)
  public final Boolean forceQuitOthers;

  private GroupJoinReq(Builder builder) {
    this.gid = builder.gid;
    this.password = builder.password;
    this.texasJoinSeat = builder.texasJoinSeat;
    this.betId = builder.betId;
    this.forceQuitOthers = builder.forceQuitOthers;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GroupJoinReq)) return false;
    GroupJoinReq o = (GroupJoinReq) other;
    return equals(gid, o.gid)
        && equals(password, o.password)
        && equals(texasJoinSeat, o.texasJoinSeat)
        && equals(betId, o.betId)
        && equals(forceQuitOthers, o.forceQuitOthers);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = gid != null ? gid.hashCode() : 0;
      result = result * 37 + (password != null ? password.hashCode() : 0);
      result = result * 37 + (texasJoinSeat != null ? texasJoinSeat.hashCode() : 0);
      result = result * 37 + (betId != null ? betId.hashCode() : 0);
      result = result * 37 + (forceQuitOthers != null ? forceQuitOthers.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<GroupJoinReq> {

    public Long gid;
    public String password;
    public Integer texasJoinSeat;
    public Integer betId;
    public Boolean forceQuitOthers;

    public Builder() {
    }

    public Builder(GroupJoinReq message) {
      super(message);
      if (message == null) return;
      this.gid = message.gid;
      this.password = message.password;
      this.texasJoinSeat = message.texasJoinSeat;
      this.betId = message.betId;
      this.forceQuitOthers = message.forceQuitOthers;
    }

    public Builder gid(Long gid) {
      this.gid = gid;
      return this;
    }

    public Builder password(String password) {
      this.password = password;
      return this;
    }

    /**
     * 创建者表示这是个加密的房间，其它进入加密房间也是填密码
     */
    public Builder texasJoinSeat(Integer texasJoinSeat) {
      this.texasJoinSeat = texasJoinSeat;
      return this;
    }

    /**
     * 快速加入游戏，普通用户快
     */
    public Builder betId(Integer betId) {
      this.betId = betId;
      return this;
    }

    /**
     * 小盲注，最小大携带
     */
    public Builder forceQuitOthers(Boolean forceQuitOthers) {
      this.forceQuitOthers = forceQuitOthers;
      return this;
    }

    @Override
    public GroupJoinReq build() {
      return new GroupJoinReq(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
