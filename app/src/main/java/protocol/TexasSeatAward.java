// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.UINT64;
import static com.squareup.wire.Message.Label.REPEATED;

public final class TexasSeatAward extends Message {

  public static final List<TexasSeatInfo> DEFAULT_SEATINFO = Collections.emptyList();
  public static final List<Long> DEFAULT_AWARDPOOL = Collections.emptyList();

  @ProtoField(tag = 1, label = REPEATED)
  public final List<TexasSeatInfo> seatInfo;

  /**
   * 座位信息
   */
  @ProtoField(tag = 2, type = UINT64, label = REPEATED)
  public final List<Long> awardPool;

  private TexasSeatAward(Builder builder) {
    this.seatInfo = immutableCopyOf(builder.seatInfo);
    this.awardPool = immutableCopyOf(builder.awardPool);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof TexasSeatAward)) return false;
    TexasSeatAward o = (TexasSeatAward) other;
    return equals(seatInfo, o.seatInfo)
        && equals(awardPool, o.awardPool);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = seatInfo != null ? seatInfo.hashCode() : 1;
      result = result * 37 + (awardPool != null ? awardPool.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<TexasSeatAward> {

    public List<TexasSeatInfo> seatInfo;
    public List<Long> awardPool;

    public Builder() {
    }

    public Builder(TexasSeatAward message) {
      super(message);
      if (message == null) return;
      this.seatInfo = copyOf(message.seatInfo);
      this.awardPool = copyOf(message.awardPool);
    }

    public Builder seatInfo(List<TexasSeatInfo> seatInfo) {
      this.seatInfo = checkForNulls(seatInfo);
      return this;
    }

    /**
     * 座位信息
     */
    public Builder awardPool(List<Long> awardPool) {
      this.awardPool = checkForNulls(awardPool);
      return this;
    }

    @Override
    public TexasSeatAward build() {
      return new TexasSeatAward(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
