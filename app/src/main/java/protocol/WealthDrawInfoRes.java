// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Datatype.UINT64;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class WealthDrawInfoRes extends Message {

  public static final Long DEFAULT_MBEAN = 0L;
  public static final Long DEFAULT_RATE = 0L;
  public static final Long DEFAULT_ALLINCOME = 0L;
  public static final Integer DEFAULT_DRAWNUM = 0;
  public static final Integer DEFAULT_CANDRAW = 0;
  public static final Long DEFAULT_MAXDRAW = 0L;
  public static final String DEFAULT_YYDRAWURL = "";

  @ProtoField(tag = 1, type = UINT64, label = REQUIRED)
  public final Long mBean;

  @ProtoField(tag = 2, type = UINT64, label = REQUIRED)
  public final Long rate;

  @ProtoField(tag = 3, type = UINT64, label = REQUIRED)
  public final Long allIncome;

  @ProtoField(tag = 4, type = UINT32, label = REQUIRED)
  public final Integer drawNum;

  @ProtoField(tag = 5)
  public final BindInfo bind;

  @ProtoField(tag = 6, type = UINT32)
  public final Integer canDraw;

  /**
   * 0不可以1可以提现
   */
  @ProtoField(tag = 7, type = UINT64)
  public final Long maxDraw;

  /**
   * 最大提现额
   */
  @ProtoField(tag = 10, type = STRING)
  public final String yyDrawUrl;

  private WealthDrawInfoRes(Builder builder) {
    this.mBean = builder.mBean;
    this.rate = builder.rate;
    this.allIncome = builder.allIncome;
    this.drawNum = builder.drawNum;
    this.bind = builder.bind;
    this.canDraw = builder.canDraw;
    this.maxDraw = builder.maxDraw;
    this.yyDrawUrl = builder.yyDrawUrl;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof WealthDrawInfoRes)) return false;
    WealthDrawInfoRes o = (WealthDrawInfoRes) other;
    return equals(mBean, o.mBean)
        && equals(rate, o.rate)
        && equals(allIncome, o.allIncome)
        && equals(drawNum, o.drawNum)
        && equals(bind, o.bind)
        && equals(canDraw, o.canDraw)
        && equals(maxDraw, o.maxDraw)
        && equals(yyDrawUrl, o.yyDrawUrl);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = mBean != null ? mBean.hashCode() : 0;
      result = result * 37 + (rate != null ? rate.hashCode() : 0);
      result = result * 37 + (allIncome != null ? allIncome.hashCode() : 0);
      result = result * 37 + (drawNum != null ? drawNum.hashCode() : 0);
      result = result * 37 + (bind != null ? bind.hashCode() : 0);
      result = result * 37 + (canDraw != null ? canDraw.hashCode() : 0);
      result = result * 37 + (maxDraw != null ? maxDraw.hashCode() : 0);
      result = result * 37 + (yyDrawUrl != null ? yyDrawUrl.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<WealthDrawInfoRes> {

    public Long mBean;
    public Long rate;
    public Long allIncome;
    public Integer drawNum;
    public BindInfo bind;
    public Integer canDraw;
    public Long maxDraw;
    public String yyDrawUrl;

    public Builder() {
    }

    public Builder(WealthDrawInfoRes message) {
      super(message);
      if (message == null) return;
      this.mBean = message.mBean;
      this.rate = message.rate;
      this.allIncome = message.allIncome;
      this.drawNum = message.drawNum;
      this.bind = message.bind;
      this.canDraw = message.canDraw;
      this.maxDraw = message.maxDraw;
      this.yyDrawUrl = message.yyDrawUrl;
    }

    public Builder mBean(Long mBean) {
      this.mBean = mBean;
      return this;
    }

    public Builder rate(Long rate) {
      this.rate = rate;
      return this;
    }

    public Builder allIncome(Long allIncome) {
      this.allIncome = allIncome;
      return this;
    }

    public Builder drawNum(Integer drawNum) {
      this.drawNum = drawNum;
      return this;
    }

    public Builder bind(BindInfo bind) {
      this.bind = bind;
      return this;
    }

    public Builder canDraw(Integer canDraw) {
      this.canDraw = canDraw;
      return this;
    }

    /**
     * 0不可以1可以提现
     */
    public Builder maxDraw(Long maxDraw) {
      this.maxDraw = maxDraw;
      return this;
    }

    /**
     * 最大提现额
     */
    public Builder yyDrawUrl(String yyDrawUrl) {
      this.yyDrawUrl = yyDrawUrl;
      return this;
    }

    @Override
    public WealthDrawInfoRes build() {
      checkRequiredFields();
      return new WealthDrawInfoRes(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
