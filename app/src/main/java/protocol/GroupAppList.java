// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.UINT64;
import static com.squareup.wire.Message.Label.REPEATED;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class GroupAppList extends Message {

  public static final Long DEFAULT_REVISION = 0L;
  public static final Long DEFAULT_GID = 0L;
  public static final List<GroupApp> DEFAULT_APPS = Collections.emptyList();

  @ProtoField(tag = 1, type = UINT64, label = REQUIRED)
  public final Long revision;

  /**
   * 最新的版本
   */
  @ProtoField(tag = 2, type = UINT64, label = REQUIRED)
  public final Long gid;

  @ProtoField(tag = 3, label = REPEATED)
  public final List<GroupApp> apps;

  private GroupAppList(Builder builder) {
    this.revision = builder.revision;
    this.gid = builder.gid;
    this.apps = immutableCopyOf(builder.apps);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GroupAppList)) return false;
    GroupAppList o = (GroupAppList) other;
    return equals(revision, o.revision)
        && equals(gid, o.gid)
        && equals(apps, o.apps);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = revision != null ? revision.hashCode() : 0;
      result = result * 37 + (gid != null ? gid.hashCode() : 0);
      result = result * 37 + (apps != null ? apps.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<GroupAppList> {

    public Long revision;
    public Long gid;
    public List<GroupApp> apps;

    public Builder() {
    }

    public Builder(GroupAppList message) {
      super(message);
      if (message == null) return;
      this.revision = message.revision;
      this.gid = message.gid;
      this.apps = copyOf(message.apps);
    }

    public Builder revision(Long revision) {
      this.revision = revision;
      return this;
    }

    /**
     * 最新的版本
     */
    public Builder gid(Long gid) {
      this.gid = gid;
      return this;
    }

    public Builder apps(List<GroupApp> apps) {
      this.apps = checkForNulls(apps);
      return this;
    }

    @Override
    public GroupAppList build() {
      checkRequiredFields();
      return new GroupAppList(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
