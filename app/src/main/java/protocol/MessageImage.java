// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Label.REPEATED;

public final class MessageImage extends Message {

  public static final String DEFAULT_PREFIX = "";
  public static final List<String> DEFAULT_HASHS = Collections.emptyList();
  public static final List<Integer> DEFAULT_TYPES = Collections.emptyList();
  public static final String DEFAULT_SUMMARY = "";

  @ProtoField(tag = 1, type = STRING)
  public final String prefix;

  @ProtoField(tag = 2, type = STRING, label = REPEATED)
  public final List<String> hashs;

  @ProtoField(tag = 3, type = UINT32, label = REPEATED)
  public final List<Integer> types;

  /**
   * 0 image, 1 gif
   */
  @ProtoField(tag = 4, type = STRING)
  public final String summary;

  private MessageImage(Builder builder) {
    this.prefix = builder.prefix;
    this.hashs = immutableCopyOf(builder.hashs);
    this.types = immutableCopyOf(builder.types);
    this.summary = builder.summary;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof MessageImage)) return false;
    MessageImage o = (MessageImage) other;
    return equals(prefix, o.prefix)
        && equals(hashs, o.hashs)
        && equals(types, o.types)
        && equals(summary, o.summary);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = prefix != null ? prefix.hashCode() : 0;
      result = result * 37 + (hashs != null ? hashs.hashCode() : 1);
      result = result * 37 + (types != null ? types.hashCode() : 1);
      result = result * 37 + (summary != null ? summary.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<MessageImage> {

    public String prefix;
    public List<String> hashs;
    public List<Integer> types;
    public String summary;

    public Builder() {
    }

    public Builder(MessageImage message) {
      super(message);
      if (message == null) return;
      this.prefix = message.prefix;
      this.hashs = copyOf(message.hashs);
      this.types = copyOf(message.types);
      this.summary = message.summary;
    }

    public Builder prefix(String prefix) {
      this.prefix = prefix;
      return this;
    }

    public Builder hashs(List<String> hashs) {
      this.hashs = checkForNulls(hashs);
      return this;
    }

    public Builder types(List<Integer> types) {
      this.types = checkForNulls(types);
      return this;
    }

    /**
     * 0 image, 1 gif
     */
    public Builder summary(String summary) {
      this.summary = summary;
      return this;
    }

    @Override
    public MessageImage build() {
      return new MessageImage(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
