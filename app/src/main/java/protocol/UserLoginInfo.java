// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT64;

public final class UserLoginInfo extends Message {

  public static final Long DEFAULT_UID = 0L;
  public static final String DEFAULT_MACID = "";
  public static final String DEFAULT_IP = "";
  public static final AccountType DEFAULT_LOGINTYPE = AccountType.AccountType_Mac;
  public static final String DEFAULT_FROMSTORE = "";
  public static final DevType DEFAULT_DEVTYPE = DevType.DevType_Unknown;

  @ProtoField(tag = 1, type = UINT64)
  public final Long uid;

  @ProtoField(tag = 2, type = STRING)
  public final String macid;

  @ProtoField(tag = 3, type = STRING)
  public final String ip;

  @ProtoField(tag = 4, type = ENUM)
  public final AccountType loginType;

  @ProtoField(tag = 5, type = STRING)
  public final String fromstore;

  @ProtoField(tag = 6, type = ENUM)
  public final DevType devtype;

  private UserLoginInfo(Builder builder) {
    this.uid = builder.uid;
    this.macid = builder.macid;
    this.ip = builder.ip;
    this.loginType = builder.loginType;
    this.fromstore = builder.fromstore;
    this.devtype = builder.devtype;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UserLoginInfo)) return false;
    UserLoginInfo o = (UserLoginInfo) other;
    return equals(uid, o.uid)
        && equals(macid, o.macid)
        && equals(ip, o.ip)
        && equals(loginType, o.loginType)
        && equals(fromstore, o.fromstore)
        && equals(devtype, o.devtype);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = uid != null ? uid.hashCode() : 0;
      result = result * 37 + (macid != null ? macid.hashCode() : 0);
      result = result * 37 + (ip != null ? ip.hashCode() : 0);
      result = result * 37 + (loginType != null ? loginType.hashCode() : 0);
      result = result * 37 + (fromstore != null ? fromstore.hashCode() : 0);
      result = result * 37 + (devtype != null ? devtype.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<UserLoginInfo> {

    public Long uid;
    public String macid;
    public String ip;
    public AccountType loginType;
    public String fromstore;
    public DevType devtype;

    public Builder() {
    }

    public Builder(UserLoginInfo message) {
      super(message);
      if (message == null) return;
      this.uid = message.uid;
      this.macid = message.macid;
      this.ip = message.ip;
      this.loginType = message.loginType;
      this.fromstore = message.fromstore;
      this.devtype = message.devtype;
    }

    public Builder uid(Long uid) {
      this.uid = uid;
      return this;
    }

    public Builder macid(String macid) {
      this.macid = macid;
      return this;
    }

    public Builder ip(String ip) {
      this.ip = ip;
      return this;
    }

    public Builder loginType(AccountType loginType) {
      this.loginType = loginType;
      return this;
    }

    public Builder fromstore(String fromstore) {
      this.fromstore = fromstore;
      return this;
    }

    public Builder devtype(DevType devtype) {
      this.devtype = devtype;
      return this;
    }

    @Override
    public UserLoginInfo build() {
      return new UserLoginInfo(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
