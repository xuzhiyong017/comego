// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class KeyExchangeReq extends Message {

  public static final Integer DEFAULT_RANDOM = 0;
  public static final String DEFAULT_RSAPUBKEYN = "";
  public static final String DEFAULT_RSAPUBKEYE = "";
  public static final Boolean DEFAULT_GZIP = false;

  @ProtoField(tag = 1, type = INT32, label = REQUIRED)
  public final Integer random;

  @ProtoField(tag = 2, type = STRING)
  public final String rsaPubKeyN;

  @ProtoField(tag = 3, type = STRING)
  public final String rsaPubKeyE;

  @ProtoField(tag = 4, type = BOOL)
  public final Boolean gzip;

  private KeyExchangeReq(Builder builder) {
    this.random = builder.random;
    this.rsaPubKeyN = builder.rsaPubKeyN;
    this.rsaPubKeyE = builder.rsaPubKeyE;
    this.gzip = builder.gzip;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof KeyExchangeReq)) return false;
    KeyExchangeReq o = (KeyExchangeReq) other;
    return equals(random, o.random)
        && equals(rsaPubKeyN, o.rsaPubKeyN)
        && equals(rsaPubKeyE, o.rsaPubKeyE)
        && equals(gzip, o.gzip);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = random != null ? random.hashCode() : 0;
      result = result * 37 + (rsaPubKeyN != null ? rsaPubKeyN.hashCode() : 0);
      result = result * 37 + (rsaPubKeyE != null ? rsaPubKeyE.hashCode() : 0);
      result = result * 37 + (gzip != null ? gzip.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<KeyExchangeReq> {

    public Integer random;
    public String rsaPubKeyN;
    public String rsaPubKeyE;
    public Boolean gzip;

    public Builder() {
    }

    public Builder(KeyExchangeReq message) {
      super(message);
      if (message == null) return;
      this.random = message.random;
      this.rsaPubKeyN = message.rsaPubKeyN;
      this.rsaPubKeyE = message.rsaPubKeyE;
      this.gzip = message.gzip;
    }

    public Builder random(Integer random) {
      this.random = random;
      return this;
    }

    public Builder rsaPubKeyN(String rsaPubKeyN) {
      this.rsaPubKeyN = rsaPubKeyN;
      return this;
    }

    public Builder rsaPubKeyE(String rsaPubKeyE) {
      this.rsaPubKeyE = rsaPubKeyE;
      return this;
    }

    public Builder gzip(Boolean gzip) {
      this.gzip = gzip;
      return this;
    }

    @Override
    public KeyExchangeReq build() {
      checkRequiredFields();
      return new KeyExchangeReq(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
