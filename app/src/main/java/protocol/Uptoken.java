// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class Uptoken extends Message {

  public static final String DEFAULT_TOKEN = "";
  public static final String DEFAULT_BUCKET = "";

  @ProtoField(tag = 1, type = STRING, label = REQUIRED)
  public final String token;

  @ProtoField(tag = 2, type = STRING, label = REQUIRED)
  public final String bucket;

  private Uptoken(Builder builder) {
    this.token = builder.token;
    this.bucket = builder.bucket;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Uptoken)) return false;
    Uptoken o = (Uptoken) other;
    return equals(token, o.token)
        && equals(bucket, o.bucket);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = token != null ? token.hashCode() : 0;
      result = result * 37 + (bucket != null ? bucket.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<Uptoken> {

    public String token;
    public String bucket;

    public Builder() {
    }

    public Builder(Uptoken message) {
      super(message);
      if (message == null) return;
      this.token = message.token;
      this.bucket = message.bucket;
    }

    public Builder token(String token) {
      this.token = token;
      return this;
    }

    public Builder bucket(String bucket) {
      this.bucket = bucket;
      return this;
    }

    @Override
    public Uptoken build() {
      checkRequiredFields();
      return new Uptoken(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
