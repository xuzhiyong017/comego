// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Datatype.UINT64;

public final class TexasQueueJoinRes extends Message {

  public static final Long DEFAULT_ROOMID = 0L;
  public static final Integer DEFAULT_SEAT = 0;

  @ProtoField(tag = 1, type = UINT64)
  public final Long roomId;

  /**
   * 不用排队，直接分配房间和位置
   */
  @ProtoField(tag = 2, type = UINT32)
  public final Integer seat;

  /**
   * 不用排队，直接分配房间和位置
   */
  @ProtoField(tag = 3)
  public final TexasQueueInfo queueInfo;

  private TexasQueueJoinRes(Builder builder) {
    this.roomId = builder.roomId;
    this.seat = builder.seat;
    this.queueInfo = builder.queueInfo;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof TexasQueueJoinRes)) return false;
    TexasQueueJoinRes o = (TexasQueueJoinRes) other;
    return equals(roomId, o.roomId)
        && equals(seat, o.seat)
        && equals(queueInfo, o.queueInfo);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = roomId != null ? roomId.hashCode() : 0;
      result = result * 37 + (seat != null ? seat.hashCode() : 0);
      result = result * 37 + (queueInfo != null ? queueInfo.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<TexasQueueJoinRes> {

    public Long roomId;
    public Integer seat;
    public TexasQueueInfo queueInfo;

    public Builder() {
    }

    public Builder(TexasQueueJoinRes message) {
      super(message);
      if (message == null) return;
      this.roomId = message.roomId;
      this.seat = message.seat;
      this.queueInfo = message.queueInfo;
    }

    public Builder roomId(Long roomId) {
      this.roomId = roomId;
      return this;
    }

    /**
     * 不用排队，直接分配房间和位置
     */
    public Builder seat(Integer seat) {
      this.seat = seat;
      return this;
    }

    /**
     * 不用排队，直接分配房间和位置
     */
    public Builder queueInfo(TexasQueueInfo queueInfo) {
      this.queueInfo = queueInfo;
      return this;
    }

    @Override
    public TexasQueueJoinRes build() {
      return new TexasQueueJoinRes(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
