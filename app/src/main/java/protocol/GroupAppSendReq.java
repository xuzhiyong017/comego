// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.UINT64;

public final class GroupAppSendReq extends Message {

  public static final Long DEFAULT_GID = 0L;

  @ProtoField(tag = 1, type = UINT64)
  public final Long gid;

  @ProtoField(tag = 2)
  public final GroupApp app;

  private GroupAppSendReq(Builder builder) {
    this.gid = builder.gid;
    this.app = builder.app;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GroupAppSendReq)) return false;
    GroupAppSendReq o = (GroupAppSendReq) other;
    return equals(gid, o.gid)
        && equals(app, o.app);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = gid != null ? gid.hashCode() : 0;
      result = result * 37 + (app != null ? app.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<GroupAppSendReq> {

    public Long gid;
    public GroupApp app;

    public Builder() {
    }

    public Builder(GroupAppSendReq message) {
      super(message);
      if (message == null) return;
      this.gid = message.gid;
      this.app = message.app;
    }

    public Builder gid(Long gid) {
      this.gid = gid;
      return this;
    }

    public Builder app(GroupApp app) {
      this.app = app;
      return this;
    }

    @Override
    public GroupAppSendReq build() {
      return new GroupAppSendReq(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
