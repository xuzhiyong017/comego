// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;

/**
 * 上传授权token
 */
public final class UptokenReq extends Message {

  public static final String DEFAULT_COOKIE = "";
  public static final List<String> DEFAULT_BUCKETS = Collections.emptyList();
  public static final String DEFAULT_FILENAME = "";
  public static final Boolean DEFAULT_NEEDKEY = false;

  @ProtoField(tag = 1, type = STRING)
  public final String cookie;

  @ProtoField(tag = 2, type = STRING, label = REPEATED)
  public final List<String> buckets;

  @ProtoField(tag = 3, type = STRING)
  public final String filename;

  @ProtoField(tag = 4, type = BOOL)
  public final Boolean needKey;

  private UptokenReq(Builder builder) {
    this.cookie = builder.cookie;
    this.buckets = immutableCopyOf(builder.buckets);
    this.filename = builder.filename;
    this.needKey = builder.needKey;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UptokenReq)) return false;
    UptokenReq o = (UptokenReq) other;
    return equals(cookie, o.cookie)
        && equals(buckets, o.buckets)
        && equals(filename, o.filename)
        && equals(needKey, o.needKey);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = cookie != null ? cookie.hashCode() : 0;
      result = result * 37 + (buckets != null ? buckets.hashCode() : 1);
      result = result * 37 + (filename != null ? filename.hashCode() : 0);
      result = result * 37 + (needKey != null ? needKey.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<UptokenReq> {

    public String cookie;
    public List<String> buckets;
    public String filename;
    public Boolean needKey;

    public Builder() {
    }

    public Builder(UptokenReq message) {
      super(message);
      if (message == null) return;
      this.cookie = message.cookie;
      this.buckets = copyOf(message.buckets);
      this.filename = message.filename;
      this.needKey = message.needKey;
    }

    public Builder cookie(String cookie) {
      this.cookie = cookie;
      return this;
    }

    public Builder buckets(List<String> buckets) {
      this.buckets = checkForNulls(buckets);
      return this;
    }

    public Builder filename(String filename) {
      this.filename = filename;
      return this;
    }

    public Builder needKey(Boolean needKey) {
      this.needKey = needKey;
      return this;
    }

    @Override
    public UptokenReq build() {
      return new UptokenReq(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
