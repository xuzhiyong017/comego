// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Datatype.UINT64;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class TexasMatchRankReq extends Message {

  public static final Integer DEFAULT_ACTID = 0;
  public static final Long DEFAULT_OWNERUID = 0L;

  @ProtoField(tag = 1, type = UINT32, label = REQUIRED)
  public final Integer actId;

  @ProtoField(tag = 2, type = UINT64)
  public final Long ownerUid;

  private TexasMatchRankReq(Builder builder) {
    this.actId = builder.actId;
    this.ownerUid = builder.ownerUid;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof TexasMatchRankReq)) return false;
    TexasMatchRankReq o = (TexasMatchRankReq) other;
    return equals(actId, o.actId)
        && equals(ownerUid, o.ownerUid);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = actId != null ? actId.hashCode() : 0;
      result = result * 37 + (ownerUid != null ? ownerUid.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<TexasMatchRankReq> {

    public Integer actId;
    public Long ownerUid;

    public Builder() {
    }

    public Builder(TexasMatchRankReq message) {
      super(message);
      if (message == null) return;
      this.actId = message.actId;
      this.ownerUid = message.ownerUid;
    }

    public Builder actId(Integer actId) {
      this.actId = actId;
      return this;
    }

    public Builder ownerUid(Long ownerUid) {
      this.ownerUid = ownerUid;
      return this;
    }

    @Override
    public TexasMatchRankReq build() {
      checkRequiredFields();
      return new TexasMatchRankReq(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
