// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Datatype.UINT64;
import static com.squareup.wire.Message.Label.REPEATED;

public final class MGoldChangeRecordRes extends Message {

  public static final List<MGoldChangeRecord> DEFAULT_RECORDS = Collections.emptyList();
  public static final Integer DEFAULT_INDEX = 0;
  public static final Integer DEFAULT_FETCHS = 0;
  public static final Long DEFAULT_THEUID = 0L;

  @ProtoField(tag = 1, label = REPEATED)
  public final List<MGoldChangeRecord> records;

  @ProtoField(tag = 2, type = UINT32)
  public final Integer index;

  @ProtoField(tag = 3, type = UINT32)
  public final Integer fetchs;

  @ProtoField(tag = 4, type = UINT64)
  public final Long theUid;

  private MGoldChangeRecordRes(Builder builder) {
    this.records = immutableCopyOf(builder.records);
    this.index = builder.index;
    this.fetchs = builder.fetchs;
    this.theUid = builder.theUid;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof MGoldChangeRecordRes)) return false;
    MGoldChangeRecordRes o = (MGoldChangeRecordRes) other;
    return equals(records, o.records)
        && equals(index, o.index)
        && equals(fetchs, o.fetchs)
        && equals(theUid, o.theUid);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = records != null ? records.hashCode() : 1;
      result = result * 37 + (index != null ? index.hashCode() : 0);
      result = result * 37 + (fetchs != null ? fetchs.hashCode() : 0);
      result = result * 37 + (theUid != null ? theUid.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<MGoldChangeRecordRes> {

    public List<MGoldChangeRecord> records;
    public Integer index;
    public Integer fetchs;
    public Long theUid;

    public Builder() {
    }

    public Builder(MGoldChangeRecordRes message) {
      super(message);
      if (message == null) return;
      this.records = copyOf(message.records);
      this.index = message.index;
      this.fetchs = message.fetchs;
      this.theUid = message.theUid;
    }

    public Builder records(List<MGoldChangeRecord> records) {
      this.records = checkForNulls(records);
      return this;
    }

    public Builder index(Integer index) {
      this.index = index;
      return this;
    }

    public Builder fetchs(Integer fetchs) {
      this.fetchs = fetchs;
      return this;
    }

    public Builder theUid(Long theUid) {
      this.theUid = theUid;
      return this;
    }

    @Override
    public MGoldChangeRecordRes build() {
      return new MGoldChangeRecordRes(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
