// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.FLOAT;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Datatype.UINT64;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class RechargeSelection extends Message {

  public static final Integer DEFAULT_ITEMID = 0;
  public static final Long DEFAULT_MGOLD = 0L;
  public static final Float DEFAULT_PRICE = 0F;
  public static final Float DEFAULT_DISCOUNT = 0F;
  public static final Boolean DEFAULT_AVAILABLE = false;
  public static final String DEFAULT_DISCOUNTTEXT = "";
  public static final Integer DEFAULT_DEV = 0;

  @ProtoField(tag = 1, type = UINT32, label = REQUIRED)
  public final Integer itemId;

  @ProtoField(tag = 2, type = UINT64)
  public final Long mGold;

  @ProtoField(tag = 3, type = FLOAT)
  public final Float price;

  @ProtoField(tag = 4, type = FLOAT)
  public final Float discount;

  @ProtoField(tag = 5, type = BOOL)
  public final Boolean available;

  @ProtoField(tag = 6, type = STRING)
  public final String discountText;

  @ProtoField(tag = 7, type = UINT32)
  public final Integer dev;

  private RechargeSelection(Builder builder) {
    this.itemId = builder.itemId;
    this.mGold = builder.mGold;
    this.price = builder.price;
    this.discount = builder.discount;
    this.available = builder.available;
    this.discountText = builder.discountText;
    this.dev = builder.dev;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof RechargeSelection)) return false;
    RechargeSelection o = (RechargeSelection) other;
    return equals(itemId, o.itemId)
        && equals(mGold, o.mGold)
        && equals(price, o.price)
        && equals(discount, o.discount)
        && equals(available, o.available)
        && equals(discountText, o.discountText)
        && equals(dev, o.dev);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = itemId != null ? itemId.hashCode() : 0;
      result = result * 37 + (mGold != null ? mGold.hashCode() : 0);
      result = result * 37 + (price != null ? price.hashCode() : 0);
      result = result * 37 + (discount != null ? discount.hashCode() : 0);
      result = result * 37 + (available != null ? available.hashCode() : 0);
      result = result * 37 + (discountText != null ? discountText.hashCode() : 0);
      result = result * 37 + (dev != null ? dev.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<RechargeSelection> {

    public Integer itemId;
    public Long mGold;
    public Float price;
    public Float discount;
    public Boolean available;
    public String discountText;
    public Integer dev;

    public Builder() {
    }

    public Builder(RechargeSelection message) {
      super(message);
      if (message == null) return;
      this.itemId = message.itemId;
      this.mGold = message.mGold;
      this.price = message.price;
      this.discount = message.discount;
      this.available = message.available;
      this.discountText = message.discountText;
      this.dev = message.dev;
    }

    public Builder itemId(Integer itemId) {
      this.itemId = itemId;
      return this;
    }

    public Builder mGold(Long mGold) {
      this.mGold = mGold;
      return this;
    }

    public Builder price(Float price) {
      this.price = price;
      return this;
    }

    public Builder discount(Float discount) {
      this.discount = discount;
      return this;
    }

    public Builder available(Boolean available) {
      this.available = available;
      return this;
    }

    public Builder discountText(String discountText) {
      this.discountText = discountText;
      return this;
    }

    public Builder dev(Integer dev) {
      this.dev = dev;
      return this;
    }

    @Override
    public RechargeSelection build() {
      checkRequiredFields();
      return new RechargeSelection(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
