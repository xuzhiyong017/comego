// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.UINT64;
import static com.squareup.wire.Message.Label.REPEATED;

public final class RecommendFollowSetRes extends Message {

  public static final List<Long> DEFAULT_UIDS = Collections.emptyList();
  public static final List<RecommendFollow> DEFAULT_USERS = Collections.emptyList();

  @ProtoField(tag = 1, type = UINT64, label = REPEATED)
  public final List<Long> uids;

  @ProtoField(tag = 2, label = REPEATED)
  public final List<RecommendFollow> users;

  private RecommendFollowSetRes(Builder builder) {
    this.uids = immutableCopyOf(builder.uids);
    this.users = immutableCopyOf(builder.users);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof RecommendFollowSetRes)) return false;
    RecommendFollowSetRes o = (RecommendFollowSetRes) other;
    return equals(uids, o.uids)
        && equals(users, o.users);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = uids != null ? uids.hashCode() : 1;
      result = result * 37 + (users != null ? users.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<RecommendFollowSetRes> {

    public List<Long> uids;
    public List<RecommendFollow> users;

    public Builder() {
    }

    public Builder(RecommendFollowSetRes message) {
      super(message);
      if (message == null) return;
      this.uids = copyOf(message.uids);
      this.users = copyOf(message.users);
    }

    public Builder uids(List<Long> uids) {
      this.uids = checkForNulls(uids);
      return this;
    }

    public Builder users(List<RecommendFollow> users) {
      this.users = checkForNulls(users);
      return this;
    }

    @Override
    public RecommendFollowSetRes build() {
      return new RecommendFollowSetRes(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
