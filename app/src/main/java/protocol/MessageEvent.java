// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Datatype.UINT64;

public final class MessageEvent extends Message {

  public static final Integer DEFAULT_EVENTTYPE = 0;
  public static final Long DEFAULT_UID = 0L;
  public static final Long DEFAULT_GID = 0L;
  public static final Integer DEFAULT_ITEMID = 0;
  public static final Integer DEFAULT_ITEMNUM = 0;
  public static final Integer DEFAULT_ITEMLEVEL = 0;
  public static final String DEFAULT_EXTFIELD = "";

  @ProtoField(tag = 1, type = UINT32)
  public final Integer eventType;

  @ProtoField(tag = 2, type = UINT64)
  public final Long uid;

  @ProtoField(tag = 3, type = UINT64)
  public final Long gid;

  @ProtoField(tag = 4, type = UINT32)
  public final Integer itemId;

  @ProtoField(tag = 5, type = UINT32)
  public final Integer itemNum;

  @ProtoField(tag = 6, type = UINT32)
  public final Integer itemLevel;

  @ProtoField(tag = 7, type = STRING)
  public final String extField;

  private MessageEvent(Builder builder) {
    this.eventType = builder.eventType;
    this.uid = builder.uid;
    this.gid = builder.gid;
    this.itemId = builder.itemId;
    this.itemNum = builder.itemNum;
    this.itemLevel = builder.itemLevel;
    this.extField = builder.extField;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof MessageEvent)) return false;
    MessageEvent o = (MessageEvent) other;
    return equals(eventType, o.eventType)
        && equals(uid, o.uid)
        && equals(gid, o.gid)
        && equals(itemId, o.itemId)
        && equals(itemNum, o.itemNum)
        && equals(itemLevel, o.itemLevel)
        && equals(extField, o.extField);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = eventType != null ? eventType.hashCode() : 0;
      result = result * 37 + (uid != null ? uid.hashCode() : 0);
      result = result * 37 + (gid != null ? gid.hashCode() : 0);
      result = result * 37 + (itemId != null ? itemId.hashCode() : 0);
      result = result * 37 + (itemNum != null ? itemNum.hashCode() : 0);
      result = result * 37 + (itemLevel != null ? itemLevel.hashCode() : 0);
      result = result * 37 + (extField != null ? extField.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<MessageEvent> {

    public Integer eventType;
    public Long uid;
    public Long gid;
    public Integer itemId;
    public Integer itemNum;
    public Integer itemLevel;
    public String extField;

    public Builder() {
    }

    public Builder(MessageEvent message) {
      super(message);
      if (message == null) return;
      this.eventType = message.eventType;
      this.uid = message.uid;
      this.gid = message.gid;
      this.itemId = message.itemId;
      this.itemNum = message.itemNum;
      this.itemLevel = message.itemLevel;
      this.extField = message.extField;
    }

    public Builder eventType(Integer eventType) {
      this.eventType = eventType;
      return this;
    }

    public Builder uid(Long uid) {
      this.uid = uid;
      return this;
    }

    public Builder gid(Long gid) {
      this.gid = gid;
      return this;
    }

    public Builder itemId(Integer itemId) {
      this.itemId = itemId;
      return this;
    }

    public Builder itemNum(Integer itemNum) {
      this.itemNum = itemNum;
      return this;
    }

    public Builder itemLevel(Integer itemLevel) {
      this.itemLevel = itemLevel;
      return this;
    }

    public Builder extField(String extField) {
      this.extField = extField;
      return this;
    }

    @Override
    public MessageEvent build() {
      return new MessageEvent(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
