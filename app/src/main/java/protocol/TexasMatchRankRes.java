// Code generated by Wire protocol buffer compiler, do not edit.
// Any Question Please Contact: jerryzhou@outlook.com
package protocol;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Datatype.UINT64;
import static com.squareup.wire.Message.Label.REPEATED;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class TexasMatchRankRes extends Message {

  public static final Integer DEFAULT_ACTID = 0;
  public static final Long DEFAULT_OWNERUID = 0L;
  public static final List<TexasMatchRankItem> DEFAULT_ITEMS = Collections.emptyList();
  public static final Long DEFAULT_MYCHIPS = 0L;
  public static final Integer DEFAULT_MYRANK = 0;

  @ProtoField(tag = 1, type = UINT32, label = REQUIRED)
  public final Integer actId;

  @ProtoField(tag = 2, type = UINT64)
  public final Long ownerUid;

  /**
   * 不填表示所有房间排名
   */
  @ProtoField(tag = 3, label = REPEATED)
  public final List<TexasMatchRankItem> items;

  @ProtoField(tag = 4, type = INT64)
  public final Long myChips;

  /**
   * 我的输赢
   */
  @ProtoField(tag = 5, type = UINT32)
  public final Integer myRank;

  private TexasMatchRankRes(Builder builder) {
    this.actId = builder.actId;
    this.ownerUid = builder.ownerUid;
    this.items = immutableCopyOf(builder.items);
    this.myChips = builder.myChips;
    this.myRank = builder.myRank;
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof TexasMatchRankRes)) return false;
    TexasMatchRankRes o = (TexasMatchRankRes) other;
    return equals(actId, o.actId)
        && equals(ownerUid, o.ownerUid)
        && equals(items, o.items)
        && equals(myChips, o.myChips)
        && equals(myRank, o.myRank);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = actId != null ? actId.hashCode() : 0;
      result = result * 37 + (ownerUid != null ? ownerUid.hashCode() : 0);
      result = result * 37 + (items != null ? items.hashCode() : 1);
      result = result * 37 + (myChips != null ? myChips.hashCode() : 0);
      result = result * 37 + (myRank != null ? myRank.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<TexasMatchRankRes> {

    public Integer actId;
    public Long ownerUid;
    public List<TexasMatchRankItem> items;
    public Long myChips;
    public Integer myRank;

    public Builder() {
    }

    public Builder(TexasMatchRankRes message) {
      super(message);
      if (message == null) return;
      this.actId = message.actId;
      this.ownerUid = message.ownerUid;
      this.items = copyOf(message.items);
      this.myChips = message.myChips;
      this.myRank = message.myRank;
    }

    public Builder actId(Integer actId) {
      this.actId = actId;
      return this;
    }

    public Builder ownerUid(Long ownerUid) {
      this.ownerUid = ownerUid;
      return this;
    }

    /**
     * 不填表示所有房间排名
     */
    public Builder items(List<TexasMatchRankItem> items) {
      this.items = checkForNulls(items);
      return this;
    }

    public Builder myChips(Long myChips) {
      this.myChips = myChips;
      return this;
    }

    /**
     * 我的输赢
     */
    public Builder myRank(Integer myRank) {
      this.myRank = myRank;
      return this;
    }

    @Override
    public TexasMatchRankRes build() {
      checkRequiredFields();
      return new TexasMatchRankRes(this);
    }
  }

  public static Builder newBuilder() {
    return new Builder();
  }
}
